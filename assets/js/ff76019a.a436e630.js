"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8262],{7060:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=t(5893),i=t(1151);const o={},r="Direct Phylum API Requests",a={id:"cli/extensions/extension_rest_api",title:"Direct Phylum API Requests",description:"Phylum REST API",source:"@site/../docs/cli/extensions/extension_rest_api.md",sourceDirName:"cli/extensions",slug:"/cli/extensions/extension_rest_api",permalink:"/cli/extensions/extension_rest_api",draft:!1,unlisted:!1,editUrl:"https://github.com/phylum-dev/cli/edit/main/docs/extensions/extension_rest_api.md",tags:[],version:"current",lastUpdatedBy:"Charles Coggins",lastUpdatedAt:1703112663,formattedLastUpdatedAt:"Dec 20, 2023",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Extension Sandboxing",permalink:"/cli/extensions/extension_sandboxing"},next:{title:"Integrations Overview",permalink:"/integrations/integrations_overview"}},c={},l=[{value:"Phylum REST API",id:"phylum-rest-api",level:2},{value:"Extension API requests",id:"extension-api-requests",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"direct-phylum-api-requests",children:"Direct Phylum API Requests"}),"\n",(0,s.jsx)(n.h2,{id:"phylum-rest-api",children:"Phylum REST API"}),"\n",(0,s.jsx)(n.p,{children:"Phylum provides a versioned REST API for retrieving all available data. This\nREST API can be used directly by extensions if there is no TypeScript API\navailable."}),"\n",(0,s.jsxs)(n.p,{children:["All endpoints are documented here:\n",(0,s.jsx)(n.a,{href:"https://api.phylum.io/api/v0/swagger/index.html",children:"https://api.phylum.io/api/v0/swagger/index.html"})]}),"\n",(0,s.jsx)(n.h2,{id:"extension-api-requests",children:"Extension API requests"}),"\n",(0,s.jsxs)(n.p,{children:["To make a Request to Phylum's REST API, you can use the built-in\n",(0,s.jsx)(n.code,{children:"PhylumApi.fetch"})," function, which takes care of authentication and finding the\ncorrect base URI. The following example retrieves projects owned by the user\nwhich do not belong to any group:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { PhylumApi, ApiVersion } from \"phylum\";\n\n// Create a fetch request to the `/data/projects/overview` endpoint.\nconst reply = await PhylumApi.fetch(\n    ApiVersion.V0,\n    '/data/projects/overview',\n);\n\n// Parse the reply as JSON.\nconst projects = await reply.json();\n\n// Output all our projects.\nconsole.log(projects);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The last parameter matches ",(0,s.jsxs)(n.a,{href:"https://deno.land/api@latest?s=fetch",children:["Deno's ",(0,s.jsx)(n.code,{children:"fetch"})," function"]})," and can be overwritten to\nsend more complicated requests. The following example creates a new Phylum\nproject through the API:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { PhylumApi, ApiVersion } from \"phylum\";\n\n// Create a fetch request to the `/data/projects` endpoint.\nconst reply = await PhylumApi.fetch(\n    ApiVersion.V0,\n    '/data/projects',\n    {\n        method: 'POST',\n        body: JSON.stringify({\n            name: 'api_example',\n        }),\n    },\n);\n\n// Parse the reply as JSON.\nconst project = await reply.json();\n\n// Output the new project.\nconsole.log(project);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var s=t(7294);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);