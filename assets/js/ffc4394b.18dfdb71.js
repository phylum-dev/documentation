"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8469],{5040:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>r});var s=t(5893),i=t(1151);const o={title:"phylum extension new",category:"6255e67693d5200013b1fa3e",parentDoc:"62d04d1ec90dcf008e476330",hidden:!1},c=void 0,l={id:"cli/commands/phylum_extension_new",title:"phylum extension new",description:"Create a new extension",source:"@site/../docs/cli/commands/phylum_extension_new.md",sourceDirName:"cli/commands",slug:"/cli/commands/phylum_extension_new",permalink:"/cli/commands/phylum_extension_new",draft:!1,unlisted:!1,editUrl:"https://github.com/phylum-dev/documentation/tree/main/site/../docs/cli/commands/phylum_extension_new.md",tags:[],version:"current",lastUpdatedBy:"Charles Coggins",lastUpdatedAt:1694019364,formattedLastUpdatedAt:"Sep 6, 2023",frontMatter:{title:"phylum extension new",category:"6255e67693d5200013b1fa3e",parentDoc:"62d04d1ec90dcf008e476330",hidden:!1},sidebar:"cliSidebar",previous:{title:"phylum extension list",permalink:"/cli/commands/phylum_extension_list"},next:{title:"phylum extension run",permalink:"/cli/commands/phylum_extension_run"}},d={},r=[{value:"Arguments",id:"arguments",level:3},{value:"Options",id:"options",level:3},{value:"Details",id:"details",level:3}];function a(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Create a new extension"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"Usage: phylum extension new [OPTIONS] <PATH>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"<PATH>"})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"-v"}),", ",(0,s.jsx)(n.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"-q"}),", ",(0,s.jsx)(n.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"-h"}),", ",(0,s.jsx)(n.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,s.jsx)(n.h3,{id:"details",children:"Details"}),"\n",(0,s.jsxs)(n.p,{children:['This command will create a "Hello, World!" extension skeleton that can be\nmodified for a specific use. See the ',(0,s.jsx)(n.a,{href:"https://docs.phylum.io/docs/extension_quickstart",children:"Extension Quickstart"})," guide for more\ndetail."]})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>c});var s=t(7294);const i={},o=s.createContext(i);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);