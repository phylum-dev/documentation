"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1949],{4274:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var i=s(4848),o=s(8453);const c={},l="Policy Examples",a={id:"knowledge_base/policy_examples",title:"Policy Examples",description:"The policy transforms your threat model into a description of why the job is being blocked. There are multiple ways to define why a job should be blocked.",source:"@site/../docs/knowledge_base/policy_examples.md",sourceDirName:"knowledge_base",slug:"/knowledge_base/policy_examples",permalink:"/knowledge_base/policy_examples",draft:!1,unlisted:!1,editUrl:"https://github.com/phylum-dev/documentation/edit/main/docs/knowledge_base/policy_examples.md",tags:[],version:"current",lastUpdatedBy:"Matt Donoughe",lastUpdatedAt:1717457691e3,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Policy Development",permalink:"/knowledge_base/policy_development"},next:{title:"Policy Application",permalink:"/knowledge_base/policy_apply"}},t={},d=[{value:"Blocking an issue",id:"blocking-an-issue",level:2},{value:"Blocking a dependency",id:"blocking-a-dependency",level:2},{value:"Blocking a job",id:"blocking-a-job",level:2}];function r(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"policy-examples",children:"Policy Examples"}),"\n",(0,i.jsx)(n.p,{children:"The policy transforms your threat model into a description of why the job is being blocked. There are multiple ways to define why a job should be blocked."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"METADATA"})," block contains ",(0,i.jsx)(n.code,{children:"OPA"})," ",(0,i.jsx)(n.a,{href:"https://www.openpolicyagent.org/docs/latest/annotations/",children:"Annotations"})," which correlate to the schema and can be used for type checking."]}),"\n",(0,i.jsx)(n.h2,{id:"blocking-an-issue",children:"Blocking an issue"}),"\n",(0,i.jsx)(n.p,{children:"The most common reason to block a job is because one of the dependencies has a known issue within one of Phylum's risk domains."}),"\n",(0,i.jsxs)(n.p,{children:["The following policy shows ways to block using an ",(0,i.jsx)(n.code,{children:"issue"})," rule based on a per-domain threshold."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rego",children:"package policy.v1\n\nimport data.phylum.domain\nimport data.phylum.level\nimport rego.v1\n\n# METADATA\n# title: risk level cannot exceed medium\ndeny contains issue if {\n    some issue in data.issues\n    issue.domain in {domain.AUTHOR, domain.ENGINEERING, domain.VULNERABILITY}\n    issue.severity > level.MEDIUM\n}\n\n# METADATA\n# title: malicious risk level cannot exceed low\ndeny contains issue if {\n    some issue in data.issues\n    issue.domain == domain.MALICIOUS\n    issue.severity > level.LOW\n}\n\n# METADATA\n# title: license risk level cannot exceed high\ndeny contains issue if {\n    some issue in data.issues\n    issue.domain == domain.LICENSE\n    issue.severity > level.HIGH\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "issues": [{\n        "id": "b8ad4443-d875-427b-9eda-b4b2fb1d6212",\n        "domain": "malicious",\n        "severity": 4,\n        "tag": "CM0004"\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "deny": [{\n        "id": "b8ad4443-d875-427b-9eda-b4b2fb1d6212",\n        "domain": "malicious",\n        "severity": 4,\n        "tag": "CM0004"\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report naming the package and describing the issue."}),"\n",(0,i.jsx)(n.h2,{id:"blocking-a-dependency",children:"Blocking a dependency"}),"\n",(0,i.jsxs)(n.p,{children:["You may also block on a dependency-level characteristic using a ",(0,i.jsx)(n.code,{children:"dependency"})," rule."]}),"\n",(0,i.jsx)(n.p,{children:"The following policy blocks packages belonging to a namespace."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rego",children:'package policy\n\nimport rego.v1\n\n# METADATA\n# title: AGPL licensed software is not allowed.\ndeny contains dependency if {\n    some dependency in data.dependencies\n    regex.match("(?i)\\\\bAGPL\\\\b", dependency.license)\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "dependencies": [{\n        "ecosystem": "npm",\n        "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n        "issues": [],\n        "issues_complete": true,\n        "license": "AGPL-3.0",\n        "name": "example-package",\n        "version": "1.0.0"\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "deny": [{\n        "ecosystem": "npm",\n        "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n        "issues": [],\n        "issues_complete": true,\n        "license": "AGPL-3.0",\n        "name": "example-package",\n        "version": "1.0.0"\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report naming the package and providing this message in the output."}),"\n",(0,i.jsx)(n.h2,{id:"blocking-a-job",children:"Blocking a job"}),"\n",(0,i.jsxs)(n.p,{children:["If a policy wants to block a job for a reason that is not related to a specific dependency, the policy can use a ",(0,i.jsx)(n.code,{children:"job"})," rule."]}),"\n",(0,i.jsx)(n.p,{children:"The following policy blocks any job that introduces an NPM dependency. Only one error is generated, even if hundreds of dependencies have been added."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rego",children:"package policy\n\nimport data.phylum.ecosystem\nimport rego.v1\n\n# METADATA\n# title: This project must not have NPM dependencies.\ndeny contains data.job if {\n    some dependency in data.dependencies\n    dependency.ecosystem == ecosystem.NPM\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "job": {\n        "dependencies": [{\n            "ecosystem": "npm",\n            "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n            "issues": [],\n            "issues_complete": true,\n            "name": "example-package",\n            "version": "1.0.0"\n        }],\n        "id": "bb30c3c1-442c-4d67-8ff2-36e87fddf0e7",\n        "project": {\n            "id": "22d4c95f-5f3f-43c0-92cd-7ca94e50d2bc",\n            "name": "example project"\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "deny": [{\n        "dependencies": [{\n            "ecosystem": "npm",\n            "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n            "issues": [],\n            "issues_complete": true,\n            "name": "example-package",\n            "version": "1.0.0"\n        }],\n        "id": "bb30c3c1-442c-4d67-8ff2-36e87fddf0e7",\n        "project": {\n            "id": "22d4c95f-5f3f-43c0-92cd-7ca94e50d2bc",\n            "name": "example project"\n        }\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report providing this message in the output."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const o={},c=i.createContext(o);function l(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);