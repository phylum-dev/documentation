"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["4976"],{3404:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>u,contentTitle:()=>l,assets:()=>a,toc:()=>c,metadata:()=>i});var i=JSON.parse('{"id":"knowledge_base/policy_development","title":"Policy Development","description":"Policy Basics","source":"@site/../docs/knowledge_base/policy_development.md","sourceDirName":"knowledge_base","slug":"/knowledge_base/policy_development","permalink":"/knowledge_base/policy_development","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/documentation/edit/main/docs/knowledge_base/policy_development.md","tags":[],"version":"current","lastUpdatedBy":"Charles Coggins","lastUpdatedAt":1742596752000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Policy Management","permalink":"/knowledge_base/policy_management"},"next":{"title":"Threat Feed","permalink":"/knowledge_base/threat_feed"}}'),o=t(5893),s=t(65);let r={},l="Policy Development",a={},c=[{value:"Policy Basics",id:"policy-basics",level:2},{value:"Creating a local policy development environment",id:"creating-a-local-policy-development-environment",level:2},{value:"Download the OPA CLI",id:"download-the-opa-cli",level:3},{value:"Download the policy SDK",id:"download-the-policy-sdk",level:3},{value:"Download input data",id:"download-input-data",level:3},{value:"Evaluating policies locally",id:"evaluating-policies-locally",level:2},{value:"Automated testing",id:"automated-testing",level:2},{value:"Evaluating policies using the Phylum API",id:"evaluating-policies-using-the-phylum-api",level:2},{value:"Policy Examples",id:"policy-examples",level:2},{value:"Blocking an issue",id:"blocking-an-issue",level:3},{value:"Blocking a dependency",id:"blocking-a-dependency",level:3}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"policy-development",children:"Policy Development"})}),"\n",(0,o.jsx)(n.h2,{id:"policy-basics",children:"Policy Basics"}),"\n",(0,o.jsxs)(n.p,{children:["This is a basic policy using an ",(0,o.jsx)(n.code,{children:"issue"})," rule to block any HIGH/CRITICAL issues."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rego",children:"# METADATA\n# title: Limit risk\n# description: |\n#   Block issues based on risk level.\npackage policy.v1\n\nimport data.phylum.level\nimport rego.v1\n\n# METADATA\n# title: risk level cannot exceed medium\ndeny contains issue if {\n    some issue in data.issues\n    issue.severity > level.MEDIUM\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"title"})," and ",(0,o.jsx)(n.code,{children:"description"})," from the initial metadata comments are displayed in the Phylum UI and are highly recommended."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"package policy.v1"})," line must be present. This is how ",(0,o.jsx)(n.a,{href:"https://www.openpolicyagent.org/",children:"Open Policy Agent"})," (OPA) finds the policy's rules."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"deny"})," rule will contain the specified issue when the ",(0,o.jsx)(n.code,{children:"if"})," statement is ",(0,o.jsx)(n.code,{children:"true"}),". OPA iterates through the job input data evaluating the expression against the severity level of every issue in the job."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"title"})," field from the metadata comment above the rule will be associated with the failure in the output from Phylum."]}),"\n",(0,o.jsx)(n.h2,{id:"creating-a-local-policy-development-environment",children:"Creating a local policy development environment"}),"\n",(0,o.jsx)(n.p,{children:"It is recommended to set up a local development environment for a better policy development experience. With a local development environment, you gain benefits such as faster feedback, more diagnostic abilities, version control, and automated testing."}),"\n",(0,o.jsx)(n.h3,{id:"download-the-opa-cli",children:"Download the OPA CLI"}),"\n",(0,o.jsxs)(n.p,{children:["Follow the instructions at ",(0,o.jsx)(n.a,{href:"https://www.openpolicyagent.org/docs/latest/#1-download-opa",children:"www.openpolicyagent.org"})," to\ndownload a copy of the OPA command line tool and run ",(0,o.jsx)(n.code,{children:"opa version"})," to ensure it is working."]}),"\n",(0,o.jsx)(n.h3,{id:"download-the-policy-sdk",children:"Download the policy SDK"}),"\n",(0,o.jsxs)(n.p,{children:["Download the policy SDK from ",(0,o.jsx)(n.a,{href:"https://api.phylum.io/api/v0/data/jobs/policy/sdk.zip",children:"the Phylum API endpoint"})," and\nextract it."]}),"\n",(0,o.jsx)(n.h3,{id:"download-input-data",children:"Download input data"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'job="YOUR JOB ID"\ntoken=$(phylum auth token -b)\ncurl -H "Authorization: Bearer ${token}" "https://api.phylum.io/api/v0/data/jobs/${job}/policy/input" -fo input.json\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note: You can obtain a Job ID by using the ",(0,o.jsx)(n.a,{href:"/cli/commands/phylum_history",children:(0,o.jsx)(n.code,{children:"phylum history"})})," command from the Phylum CLI."]}),"\n",(0,o.jsx)(n.h2,{id:"evaluating-policies-locally",children:"Evaluating policies locally"}),"\n",(0,o.jsxs)(n.p,{children:["A policy can be evaluated using ",(0,o.jsx)(n.code,{children:"opa eval --data <YOUR POLICY>.rego --data constants.json --input input.json --schema schema --format pretty data.policy.v1"}),"."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Input"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Provider"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"<YOUR POLICY>.rego"})}),(0,o.jsx)(n.td,{children:"policy you want to test"}),(0,o.jsx)(n.td,{children:"User"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"constants.json"})}),(0,o.jsx)(n.td,{children:"constants that can be used in your custom policy"}),(0,o.jsx)(n.td,{children:"Phylum"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"input.json"})}),(0,o.jsx)(n.td,{children:"input data to evaluate, generally from a Phylum job response"}),(0,o.jsx)(n.td,{children:"User"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"schema"})}),(0,o.jsx)(n.td,{children:"location of the schema files"}),(0,o.jsx)(n.td,{children:"Phylum"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"data.phylum.job"})}),(0,o.jsx)(n.td,{children:"entry point"}),(0,o.jsx)(n.td,{children:"Static value"})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["If everything is working, you will receive JSON output from ",(0,o.jsx)(n.code,{children:"opa"})," that looks like this:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "deny": []\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"This is what the output looks like when the job is allowed by the policy. When the policy blocks something, there will be additional data describing the failure."}),"\n",(0,o.jsx)(n.h2,{id:"automated-testing",children:"Automated testing"}),"\n",(0,o.jsxs)(n.p,{children:["Open Policy Agent has documentation on ",(0,o.jsx)(n.a,{href:"https://www.openpolicyagent.org/docs/latest/policy-testing/",children:"policy testing"}),". Writing an automated test for your Phylum policy looks something like this:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rego",children:'# example_test.rego\n# This is a test for the default.rego which blocks high/critical severity issues.\n\npackage policy.v1\n\nimport data.phylum.level\nimport rego.v1\n\ntest_block_high if {\n    issue := {\n        "id": "abc",\n        "tag": "tag",\n        "severity": level.HIGH\n    }\n\n    # Evaluate policy with mock input\n    check := deny with data.issues as [issue]\n\n    # Assert that the set contains the expected issue\n    check == {issue}\n}\n\ntest_allow_medium if {\n    issue := {\n        "id": "abc",\n        "tag": "tag",\n        "severity": level.MEDIUM\n    }\n\n    # Evaluate policy with mock input\n    check := deny with data.issues as [issue]\n\n    # Assert that the set is empty\n    check == set()\n}\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This test requires ",(0,o.jsx)(n.code,{children:"constants.json"})," from the Phylum SDK. The test can be executed against the Phylum ",(0,o.jsx)(n.code,{children:"default.rego"})," policy using ",(0,o.jsx)(n.code,{children:"opa test constants.json default.rego example_test.rego"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"evaluating-policies-using-the-phylum-api",children:"Evaluating policies using the Phylum API"}),"\n",(0,o.jsxs)(n.p,{children:["Using the ",(0,o.jsx)(n.a,{href:"https://swagger.phylum.io/#/Jobs/jobs_evaluate_policy",children:(0,o.jsx)(n.code,{children:"evaluate_policy"})})," API, it's possible to evaluate policies within Phylum. This is the same API used by Phylum tooling."]}),"\n",(0,o.jsxs)(n.p,{children:["To evaluate an existing job using ",(0,o.jsx)(n.code,{children:"example.rego"})," you can make an API call like this:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'curl -H "Authorization: Bearer $(phylum auth token -b)" -H "Content-Type: text/plain" --data-binary @example.rego https://api.phylum.io/api/v0/data/jobs/YOUR_JOB_ID/policy/evaluate\n'})}),"\n",(0,o.jsx)(n.p,{children:"If the endpoint is called with no body, the project's saved policy will be used."}),"\n",(0,o.jsx)(n.p,{children:"If policy evaluation is successful, the result will contain both the policy output as well as a generated report in Markdown format."}),"\n",(0,o.jsx)(n.p,{children:"Issues that have been suppressed via project preferences are visible to the policy, but the related rejections will not be included in the Markdown report."}),"\n",(0,o.jsxs)(n.p,{children:["Dependencies that are ignored via the ",(0,o.jsx)(n.code,{children:"ignored_packages"})," parameter are filtered out before applying the policy and will not be visible in the policy input or output."]}),"\n",(0,o.jsx)(n.h2,{id:"policy-examples",children:"Policy Examples"}),"\n",(0,o.jsx)(n.p,{children:"The policy transforms your threat model into a description of why the job is being blocked. There are multiple ways to define why a job should be blocked."}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"METADATA"})," block contains OPA ",(0,o.jsx)(n.a,{href:"https://www.openpolicyagent.org/docs/latest/policy-language/#annotations",children:"Annotations"})," which correlate to the schema and can be used for type checking."]}),"\n",(0,o.jsx)(n.h3,{id:"blocking-an-issue",children:"Blocking an issue"}),"\n",(0,o.jsx)(n.p,{children:"The most common reason to block a job is because one of the dependencies has a known issue within one of Phylum's risk domains."}),"\n",(0,o.jsxs)(n.p,{children:["The following policy shows ways to block using an ",(0,o.jsx)(n.code,{children:"issue"})," rule based on a per-domain threshold."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rego",children:"package policy.v1\n\nimport data.phylum.domain\nimport data.phylum.level\nimport rego.v1\n\n# METADATA\n# title: risk level cannot exceed medium\ndeny contains issue if {\n    some issue in data.issues\n    issue.domain in {domain.AUTHOR, domain.ENGINEERING, domain.VULNERABILITY}\n    issue.severity > level.MEDIUM\n}\n\n# METADATA\n# title: malicious risk level cannot exceed low\ndeny contains issue if {\n    some issue in data.issues\n    issue.domain == domain.MALICIOUS\n    issue.severity > level.LOW\n}\n\n# METADATA\n# title: license risk level cannot exceed high\ndeny contains issue if {\n    some issue in data.issues\n    issue.domain == domain.LICENSE\n    issue.severity > level.HIGH\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "issues": [{\n        "id": "b8ad4443-d875-427b-9eda-b4b2fb1d6212",\n        "domain": "malicious",\n        "severity": 4,\n        "tag": "CM0004"\n    }]\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "deny": [{\n        "id": "b8ad4443-d875-427b-9eda-b4b2fb1d6212",\n        "domain": "malicious",\n        "severity": 4,\n        "tag": "CM0004"\n    }]\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report naming the package and describing the issue."}),"\n",(0,o.jsx)(n.h3,{id:"blocking-a-dependency",children:"Blocking a dependency"}),"\n",(0,o.jsxs)(n.p,{children:["You may also block on a dependency-level characteristic using a ",(0,o.jsx)(n.code,{children:"dependency"})," rule."]}),"\n",(0,o.jsxs)(n.p,{children:["The following policy blocks packages belonging to a namespace.\nNote: This is just an example, there is already a ",(0,o.jsx)(n.a,{href:"https://github.com/phylum-dev/policy/blob/main/copyleft_license.rego",children:"policy"})," for blocking copyleft licenses."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rego",children:'package policy.v1\n\nimport rego.v1\n\n# METADATA\n# title: AGPL licensed software is not allowed.\ndeny contains dependency if {\n    some dependency in data.dependencies\n    regex.match("(?i)\\\\bAGPL\\\\b", dependency.license)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "dependencies": [{\n        "ecosystem": "npm",\n        "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n        "issues": [],\n        "issues_complete": true,\n        "license": "AGPL-3.0",\n        "name": "example-package",\n        "version": "1.0.0"\n    }]\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "deny": [{\n        "ecosystem": "npm",\n        "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n        "issues": [],\n        "issues_complete": true,\n        "license": "AGPL-3.0",\n        "name": "example-package",\n        "version": "1.0.0"\n    }]\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report naming the package and providing this message in the output."})]})}function u(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},5251:function(e,n,t){var i=t(7294),o=Symbol.for("react.element"),s=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,l=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var i,s={},c=null,d=null;for(i in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(d=n.ref),n)r.call(n,i)&&!a.hasOwnProperty(i)&&(s[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===s[i]&&(s[i]=n[i]);return{$$typeof:o,type:e,key:c,ref:d,props:s,_owner:l.current}}n.Fragment=s,n.jsx=c,n.jsxs=c},2408:function(e,n){var t=Symbol.for("react.element"),i=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),a=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator,y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f=Object.assign,m={};function g(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||y}function j(){}function v(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||y}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},j.prototype=g.prototype;var x=v.prototype=new j;x.constructor=v,f(x,g.prototype),x.isPureReactComponent=!0;var b=Array.isArray,w=Object.prototype.hasOwnProperty,k={current:null},_={key:!0,ref:!0,__self:!0,__source:!0};function P(e,n,i){var o,s={},r=null,l=null;if(null!=n)for(o in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(r=""+n.key),n)w.call(n,o)&&!_.hasOwnProperty(o)&&(s[o]=n[o]);var a=arguments.length-2;if(1===a)s.children=i;else if(1<a){for(var c=Array(a),d=0;d<a;d++)c[d]=arguments[d+2];s.children=c}if(e&&e.defaultProps)for(o in a=e.defaultProps)void 0===s[o]&&(s[o]=a[o]);return{$$typeof:t,type:e,key:r,ref:l,props:s,_owner:k.current}}function A(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var E=/\/+/g;function I(e,n){var t,i;return"object"==typeof e&&null!==e&&null!=e.key?(t=""+e.key,i={"=":"=0",":":"=2"},"$"+t.replace(/[=:]/g,function(e){return i[e]})):n.toString(36)}function T(e,n,o){if(null==e)return e;var s=[],r=0;return!function e(n,o,s,r,l){var a,c,d,u=typeof n;("undefined"===u||"boolean"===u)&&(n=null);var h=!1;if(null===n)h=!0;else switch(u){case"string":case"number":h=!0;break;case"object":switch(n.$$typeof){case t:case i:h=!0}}if(h)return l=l(h=n),n=""===r?"."+I(h,0):r,b(l)?(s="",null!=n&&(s=n.replace(E,"$&/")+"/"),e(l,o,s,"",function(e){return e})):null!=l&&(A(l)&&(a=l,c=s+(!l.key||h&&h.key===l.key?"":(""+l.key).replace(E,"$&/")+"/")+n,l={$$typeof:t,type:a.type,key:c,ref:a.ref,props:a.props,_owner:a._owner}),o.push(l)),1;if(h=0,r=""===r?".":r+":",b(n))for(var y=0;y<n.length;y++){var f=r+I(u=n[y],y);h+=e(u,o,s,f,l)}else if("function"==typeof(f=null===(d=n)||"object"!=typeof d?null:"function"==typeof(d=p&&d[p]||d["@@iterator"])?d:null))for(n=f.call(n),y=0;!(u=n.next()).done;)f=r+I(u=u.value,y++),h+=e(u,o,s,f,l);else if("object"===u)throw Error("Objects are not valid as a React child (found: "+("[object Object]"===(o=String(n))?"object with keys {"+Object.keys(n).join(", ")+"}":o)+"). If you meant to render a collection of children, use an array instead.");return h}(e,s,"","",function(e){return n.call(o,e,r++)}),s}function S(e){if(-1===e._status){var n=e._result;(n=n()).then(function(n){(0===e._status||-1===e._status)&&(e._status=1,e._result=n)},function(n){(0===e._status||-1===e._status)&&(e._status=2,e._result=n)}),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var C={current:null},O={transition:null};function D(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:T,forEach:function(e,n,t){T(e,function(){n.apply(this,arguments)},t)},count:function(e){var n=0;return T(e,function(){n++}),n},toArray:function(e){return T(e,function(e){return e})||[]},only:function(e){if(!A(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=g,n.Fragment=o,n.Profiler=r,n.PureComponent=v,n.StrictMode=s,n.Suspense=d,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED={ReactCurrentDispatcher:C,ReactCurrentBatchConfig:O,ReactCurrentOwner:k},n.act=D,n.cloneElement=function(e,n,i){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=f({},e.props),s=e.key,r=e.ref,l=e._owner;if(null!=n){if(void 0!==n.ref&&(r=n.ref,l=k.current),void 0!==n.key&&(s=""+n.key),e.type&&e.type.defaultProps)var a=e.type.defaultProps;for(c in n)w.call(n,c)&&!_.hasOwnProperty(c)&&(o[c]=void 0===n[c]&&void 0!==a?a[c]:n[c])}var c=arguments.length-2;if(1===c)o.children=i;else if(1<c){a=Array(c);for(var d=0;d<c;d++)a[d]=arguments[d+2];o.children=a}return{$$typeof:t,type:e.type,key:s,ref:r,props:o,_owner:l}},n.createContext=function(e){return(e={$$typeof:a,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},n.createElement=P,n.createFactory=function(e){var n=P.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=A,n.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:S}},n.memo=function(e,n){return{$$typeof:u,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=O.transition;O.transition={};try{e()}finally{O.transition=n}},n.unstable_act=D,n.useCallback=function(e,n){return C.current.useCallback(e,n)},n.useContext=function(e){return C.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return C.current.useDeferredValue(e)},n.useEffect=function(e,n){return C.current.useEffect(e,n)},n.useId=function(){return C.current.useId()},n.useImperativeHandle=function(e,n,t){return C.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return C.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return C.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return C.current.useMemo(e,n)},n.useReducer=function(e,n,t){return C.current.useReducer(e,n,t)},n.useRef=function(e){return C.current.useRef(e)},n.useState=function(e){return C.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return C.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return C.current.useTransition()},n.version="18.3.1"},7294:function(e,n,t){e.exports=t(2408)},5893:function(e,n,t){e.exports=t(5251)},65:function(e,n,t){t.d(n,{Z:()=>l,a:()=>r});var i=t(7294);let o={},s=i.createContext(o);function r(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);