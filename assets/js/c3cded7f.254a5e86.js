"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["4365"],{7374:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,default:()=>h,contentTitle:()=>a,assets:()=>l,toc:()=>c,metadata:()=>i});var i=JSON.parse('{"id":"phylum-ci/jenkins","title":"Jenkins Pipelines Integration","description":"Quickstart","source":"@site/../docs/phylum-ci/jenkins.md","sourceDirName":"phylum-ci","slug":"/phylum-ci/jenkins","permalink":"/phylum-ci/jenkins","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/phylum-ci/edit/main/docs/integrations/jenkins.md","tags":[],"version":"current","lastUpdatedBy":"Charles Coggins","lastUpdatedAt":1742485159000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"GitLab CI Integration","permalink":"/phylum-ci/gitlab_ci"},"next":{"title":"Netskope Integration","permalink":"/integrations/netskope"}}'),r=t(5893),s=t(65);let o={},a="Jenkins Pipelines Integration",l={},c=[{value:"Quickstart",id:"quickstart",level:2},{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configure <code>Jenkinsfile</code>",id:"configure-jenkinsfile",level:2},{value:"Docker image selection",id:"docker-image-selection",level:3},{value:"User-defined variables",id:"user-defined-variables",level:3},{value:"Git checkout step",id:"git-checkout-step",level:3},{value:"<code>phylum-ci</code> step arguments",id:"phylum-ci-step-arguments",level:3},{value:"Exit Codes",id:"exit-codes",level:3},{value:"Alternatives",id:"alternatives",level:2}];function u(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"jenkins-pipelines-integration",children:"Jenkins Pipelines Integration"})}),"\n",(0,r.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Create a new "secret text" ',(0,r.jsx)(n.a,{href:"https://www.jenkins.io/doc/book/using/using-credentials/",children:"credential"})," containing a ",(0,r.jsx)(n.a,{href:"/knowledge_base/api-keys",children:"Phylum authentication token"}),".\nThe credential ID should be specified since it will be used in the ",(0,r.jsx)(n.code,{children:"Jenkinsfile"})," (e.g., ",(0,r.jsx)(n.code,{children:"phylum-token"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Add the following "Phylum" stage to an existing ',(0,r.jsx)(n.code,{children:"Jenkinsfile"})," declarative pipeline configuration:"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"    stage('Phylum') {\n      agent {\n        docker {\n          image 'phylumio/phylum-ci:latest'\n          alwaysPull true\n        }\n      }\n      environment {\n        // The environment variable must be named like\n        // this but the credential ID can be different.\n        PHYLUM_API_KEY = credentials('phylum-token')\n      }\n      steps {\n        // The `--force-analysis` and `--all-deps` flags\n        // are needed because this configuration has no\n        // history available for computing changes.\n        sh 'phylum-ci -vv --force-analysis --all-deps'\n      }\n    }\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26A0\uFE0F ",(0,r.jsx)(n.strong,{children:"INFO"})," \u26A0\uFE0F"]}),"\n",(0,r.jsxs)(n.p,{children:["This is a limited configuration that provides the current state of ",(0,r.jsx)(n.strong,{children:"all"})," dependencies.\nIt does not account for newly added or modified dependencies like would be found in a branch or pull request.\nPlease see the rest of this documentation for more comprehensive configuration options."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Once configured for a repository as part of a multibranch pipeline project, the Jenkins Pipelines integration will\nprovide analysis of project dependencies from manifests and lockfiles. This can happen as a result of a commit or a\npull request (PR)."}),"\n",(0,r.jsxs)(n.p,{children:["For PR pipelines, analyzed dependencies will include any that are added/modified in the PR. For branch pipelines, the\nanalyzed dependencies will be determined by comparing dependency files in the branch to the default branch. ",(0,r.jsx)(n.strong,{children:"All"}),"\ndependencies will be analyzed when the branch pipeline is run on the default branch."]}),"\n",(0,r.jsxs)(n.p,{children:["Results are provided in the pipeline logs. The CI job will return an error (i.e., fail the build) if any of the\nanalyzed dependencies fail to meet the established policy unless audit mode is specified. If one or more dependencies\nare still processing (no results available), then the logs will make that clear and the CI job will only fail if\ndependencies that have ",(0,r.jsx)(n.em,{children:"completed analysis results"})," do not meet the active policy."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Jenkins is supported for multibranch pipelines through the use of a Docker image.\nThe prerequisites for using this image are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Access to the ",(0,r.jsxs)(n.a,{href:"https://hub.docker.com/r/phylumio/phylum-ci/tags",children:[(0,r.jsx)(n.code,{children:"phylumio/phylum-ci"})," Docker image"]})]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.a,{href:"/knowledge_base/api-keys",children:"Phylum token"})," with API access\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://phylum.io/contact-us/",children:"Contact Phylum"})," or ",(0,r.jsx)(n.a,{href:"https://app.phylum.io/register",children:"register"})," to gain access\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["See also ",(0,r.jsx)(n.a,{href:"/cli/commands/phylum_auth_register",children:(0,r.jsx)(n.code,{children:"phylum auth register"})})," command documentation"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Consider using a bot or group account for this token"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Access to the Phylum API endpoints\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"That usually means a connection to the internet, optionally via a proxy"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"configure-jenkinsfile",children:["Configure ",(0,r.jsx)(n.code,{children:"Jenkinsfile"})]}),"\n",(0,r.jsx)(n.p,{children:"Phylum analysis of dependencies can be added to existing pipelines or on it's own with this minimal declarative\npipeline configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"pipeline {\n  agent none\n  stages {\n    stage('Phylum') {\n      agent {\n        docker {\n          image 'phylumio/phylum-ci:latest'\n          alwaysPull true\n        }\n      }\n      environment {\n        PHYLUM_API_KEY = credentials('phylum-token')\n      }\n      options {\n        // This is optional but may save time since\n        // a full checkout is needed later.\n        skipDefaultCheckout()\n      }\n      steps {\n        checkout scmGit(\n          branches: [[name: '**']],\n          extensions: [cleanBeforeCheckout()],\n          // Change to match your repository URL and creds.\n          userRemoteConfigs: [[\n            credentialsId: 'CHANGEME',\n            url: 'https://github.com/CHANGEME/CHANGEME.git'\n          ]]\n        )\n        withCredentials([gitUsernamePassword(credentialsId: 'CHANGEME', gitToolName: 'Default')]) {\n          sh 'phylum-ci -vv'\n        }\n      }\n      post {\n        always {\n          // Cleaning the workspace ensures the git\n          // checkout is valid for future runs.\n          cleanWs()\n        }\n      }\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:['This configuration contains a single stage named "Phylum" which executes from a custom Docker image. It will run for\n',(0,r.jsx)(n.em,{children:"all"})," pull requests and pushes to ",(0,r.jsx)(n.em,{children:"any"})," branch. It provides debug output but otherwise does not override any of\nthe ",(0,r.jsx)(n.code,{children:"phylum-ci"})," arguments, which are all either optional or default to secure values. Let's take a deeper dive into\neach part of the configuration:"]}),"\n",(0,r.jsx)(n.h3,{id:"docker-image-selection",children:"Docker image selection"}),"\n",(0,r.jsxs)(n.p,{children:["Choose the Docker image tag to match your comfort level with image dependencies. ",(0,r.jsx)(n.code,{children:"latest"}),' is a "rolling" tag that\nwill point to the image created for the latest released ',(0,r.jsx)(n.code,{children:"phylum-ci"})," Python package. A particular version tag\n(e.g., ",(0,r.jsx)(n.code,{children:"0.42.4-CLIv6.1.2"}),") is created for each release of the ",(0,r.jsx)(n.code,{children:"phylum-ci"})," Python package and ",(0,r.jsx)(n.em,{children:"should"})," not change\nonce published."]}),"\n",(0,r.jsxs)(n.p,{children:["However, to be certain that the image does not change...or be warned when it does because it won't be available\nanymore...use the SHA256 digest of the tag. The digest can be found by looking at the ",(0,r.jsx)(n.code,{children:"phylumio/phylum-ci"}),"\n",(0,r.jsx)(n.a,{href:"https://hub.docker.com/r/phylumio/phylum-ci/tags",children:"tags on Docker Hub"})," or with the command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'# NOTE: The command-line JSON processor `jq` is used here for the sake of a one line example. It is not required.\n\u276F docker manifest inspect --verbose phylumio/phylum-ci:0.42.4-CLIv6.1.2 | jq .Descriptor.digest\n"sha256:77b761ccef10edc28b0f009a40fbeab240bf004522edaaea05572dc3728b6ca6"\n'})}),"\n",(0,r.jsx)(n.p,{children:"For instance, at the time of this writing, all of these tag references pointed to the same image:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"      agent {\n        docker {\n          // NOTE: These are examples. Only one image line for `phylum-ci` is expected.\n          //\n          // Not specifying a tag means a default of `latest`\n          image 'phylumio/phylum-ci'\n          // Be more explicit about wanting the `latest` tag\n          image 'phylumio/phylum-ci:latest'\n          // Use a specific release version of the `phylum-ci` package\n          image 'phylumio/phylum-ci:0.42.4-CLIv6.1.2'\n          // Use a specific image with it's SHA256 digest\n          image 'phylumio/phylum-ci@sha256:77b761ccef10edc28b0f009a40fbeab240bf004522edaaea05572dc3728b6ca6'\n\n          // This option is useful when image is NOT specified by hash\n          alwaysPull true\n        }\n      }\n"})}),"\n",(0,r.jsx)(n.p,{children:'Only the last tag reference, by SHA256 digest, is guaranteed to not have the underlying image it points to change.\nIf digest references are not used, it is recommended to enable the setting to always pull the image, especially if the\n"latest" tag is configured. That way, the latest changes will be used instead of the ones when the tag was first pulled.'}),"\n",(0,r.jsxs)(n.p,{children:["The default ",(0,r.jsx)(n.code,{children:"phylum-ci"})," Docker image contains ",(0,r.jsx)(n.code,{children:"git"})," and the installed ",(0,r.jsx)(n.code,{children:"phylum"})," Python package. It also contains an\ninstalled version of the Phylum CLI and all required tools needed for ",(0,r.jsx)(n.a,{href:"/cli/lockfile_generation",children:"lockfile generation"}),".\nAn advantage of using the default Docker image is that the complete environment is packaged and made available\nwith components that are known to work together."]}),"\n",(0,r.jsxs)(n.p,{children:["One disadvantage to the default image is it's size. It can take a while to download and may provide more\ntools than required for your specific use case. Special ",(0,r.jsx)(n.code,{children:"slim"})," tags of the ",(0,r.jsx)(n.code,{children:"phylum-ci"})," image are provided as\nan alternative. These tags differ from the default image in that they do not contain the required tools needed\nfor ",(0,r.jsx)(n.a,{href:"/cli/lockfile_generation",children:"lockfile generation"})," (with the exception of the ",(0,r.jsx)(n.code,{children:"pip"})," tool). The ",(0,r.jsx)(n.code,{children:"slim"})," tags are\nsignificantly smaller and allow for faster action run times. They are useful for those instances where ",(0,r.jsx)(n.strong,{children:"no"}),"\nmanifest files are present and/or ",(0,r.jsx)(n.strong,{children:"only"})," lockfiles are used."]}),"\n",(0,r.jsx)(n.p,{children:"Here are examples of using the slim image tags:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"      agent {\n        docker {\n          // NOTE: These are examples. Only one image line for `phylum-ci` is expected.\n          //\n          // Use the most current release of *both* `phylum-ci` and the Phylum CLI\n          image 'phylumio/phylum-ci:slim'\n          // Use the `slim` image with a specific release version of `phylum-ci` and Phylum CLI\n          image 'phylumio/phylum-ci:0.42.4-CLIv6.1.2-slim'\n\n          // This option is useful when image is NOT specified by hash\n          alwaysPull true\n        }\n      }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See the documentation for ",(0,r.jsx)(n.a,{href:"https://www.jenkins.io/doc/book/pipeline/docker/",children:"using Docker with Pipeline"})," more information."]}),"\n",(0,r.jsx)(n.h3,{id:"user-defined-variables",children:"User-defined variables"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.a,{href:"/knowledge_base/api-keys",children:"Phylum token"})," with API access is required to perform analysis on project dependencies.\n",(0,r.jsx)(n.a,{href:"https://phylum.io/contact-us/",children:"Contact Phylum"})," or ",(0,r.jsx)(n.a,{href:"https://app.phylum.io/register",children:"register"})," to gain access.\nSee also ",(0,r.jsx)(n.a,{href:"/cli/commands/phylum_auth_register",children:(0,r.jsx)(n.code,{children:"phylum auth register"})})," command documentation and consider using a bot or group account\nfor this token."]}),"\n",(0,r.jsxs)(n.p,{children:["Provide the token value in a ",(0,r.jsx)(n.a,{href:"https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#setting-environment-variables",children:"user-defined variable"})," named ",(0,r.jsx)(n.code,{children:"PHYLUM_API_KEY"}),", set at the stage level or\nhigher. The value for this variable is sensitive and should be set as a secret text ",(0,r.jsx)(n.a,{href:"https://www.jenkins.io/doc/book/using/using-credentials/",children:"credential"}),".\n",(0,r.jsx)(n.strong,{children:"Care should be taken to protect it appropriately"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"      environment {\n        // Variable must be named `PHYLUM_API_KEY`\n        // but the credential ID can be different.\n        PHYLUM_API_KEY = credentials('phylum-token')\n      }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"git-checkout-step",children:"Git checkout step"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"git"})," version control system is used within the ",(0,r.jsx)(n.code,{children:"phylum-ci"})," package to do things like determine if there was a\ndependency file change and, when specified, report on new dependencies only. Therefore, a full clone of the\nrepository is required to ensure that the local working copy is always pristine and history is available to pull the\nrequested information."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"      steps {\n        // A full checkout is needed to provide history and proper diffs.\n        // A `checkout scm` step is not enough here.\n        checkout scmGit(\n          branches: [[name: '**']],\n          extensions: [cleanBeforeCheckout()],\n          // Change to match your repository URL and creds.\n          userRemoteConfigs: [[\n            credentialsId: 'CHANGEME',\n            url: 'https://github.com/CHANGEME/CHANGEME.git'\n          ]]\n        )\n      }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"https://www.jenkins.io/doc/pipeline/steps/workflow-scm-step/",children:"checkout step"})," and ",(0,r.jsx)(n.a,{href:"https://plugins.jenkins.io/workflow-scm-step/",children:"checkout plugin"})," documentation for more information."]}),"\n",(0,r.jsxs)(n.h3,{id:"phylum-ci-step-arguments",children:[(0,r.jsx)(n.code,{children:"phylum-ci"})," step arguments"]}),"\n",(0,r.jsxs)(n.p,{children:["The arguments to the ",(0,r.jsx)(n.code,{children:"phylum-ci"})," script are the way to exert control over the execution of the Phylum analysis.\nThe ",(0,r.jsx)(n.code,{children:"phylum-ci"})," script entry point has a number of arguments that are all optional and defaulted to secure values.\nTo view the arguments, their description, and default values, run the script with ",(0,r.jsx)(n.code,{children:"--help"})," output as specified in the\n",(0,r.jsx)(n.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md#usage",children:"Usage section of the top-level README.md"})," or view the ",(0,r.jsx)(n.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/docs/script_options.md",children:"script options output"})," for the latest\nrelease."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"      steps {\n        // This block is needed for change detection and using\n        // authenticated git commands. Change the `credentialsId`.\n        withCredentials([gitUsernamePassword(credentialsId: 'CHANGEME', gitToolName: 'Default')]) {\n          // NOTE: These are examples. Only one `phylum-ci` entry is expected.\n          //\n          // Use the defaults for all the arguments.\n          // The default behavior is to only analyze newly added dependencies\n          // against the active policy set at the Phylum project level.\n          sh 'phylum-ci'\n\n          // Provide debug level output. Highly recommended.\n          sh 'phylum-ci -vv'\n\n          // Consider all dependencies in analysis results instead of just the newly added ones.\n          // The default is to only analyze newly added dependencies, which can be useful for\n          // existing code bases that may not meet established policy rules yet,\n          // but don't want to make things worse. Specifying `--all-deps` can be useful for\n          // casting the widest net for strict adherence to Quality Assurance (QA) standards.\n          sh 'phylum-ci --all-deps'\n\n          // Some lockfile types (e.g., Python/pip `requirements.txt`) are ambiguous in\n          // that they can be named differently and may or may not contain strict\n          // dependencies. In these cases it is best to specify an explicit path, either\n          // with the `--depfile` option or in a `.phylum_project` file. For more, see:\n          // https://docs.phylum.io/knowledge_base/phylum_project_files\n          sh 'phylum-ci --depfile requirements-prod.txt'\n\n          // Specify multiple explicit dependency file paths.\n          sh 'phylum-ci --depfile requirements-prod.txt Cargo.toml path/to/dependency.file'\n\n          // Exclude dependency files by gitignore-style pattern.\n          sh 'phylum-ci --exclude \"requirements-*.txt\"'\n\n          // Specify multiple exclusion patterns.\n          sh 'phylum-ci --exclude \"build.gradle\" \"tests/fixtures/\"'\n          sh 'phylum-ci \\\n              --exclude \"/requirements-*.txt\" \\\n              --exclude \"build.gradle\" \"fixtures/\"'\n\n          // Force analysis for all dependencies in a manifest file. This is especially useful\n          // for *workspace* manifest files where there is no companion lockfile (e.g., libraries).\n          sh 'phylum-ci --force-analysis --all-deps --depfile Cargo.toml'\n\n          // Perform analysis as part of an organization and/or group-owned project.\n          // When an org is specified, a group name must also be specified.\n          sh 'phylum-ci --org my_org --group my_group'\n          sh 'phylum-ci --group my_group'\n\n          // Analyze all dependencies in audit mode, to gain insight without failing builds.\n          sh 'phylum-ci --all-deps --audit'\n\n          // Ensure the latest Phylum CLI is installed.\n          sh 'phylum-ci --force-install'\n\n          // Install a specific version of the Phylum CLI.\n          sh 'phylum-ci --phylum-release 6.4.0 --force-install'\n\n          // Mix and match for your specific use case.\n          sh 'phylum-ci \\\n            -vv \\\n            --org my_org \\\n            --group my_group \\\n            --depfile requirements-dev.txt \\\n            --depfile requirements-prod.txt path/to/dependency.file \\\n            --depfile Cargo.toml \\\n            --force-analysis \\\n            --all-deps'\n        }\n      }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exit-codes",children:"Exit Codes"}),"\n",(0,r.jsxs)(n.p,{children:["The Phylum analysis stage will return a zero (0) exit code when it completes successfully and a non-zero code otherwise.\nThe full and current list of exit codes is ",(0,r.jsx)(n.a,{href:"https://github.com/phylum-dev/phylum-ci#exit-codes",children:"documented here"}),' and "Output Modification"\n',(0,r.jsx)(n.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/docs/script_options.md",children:"options exist"})," to be strict or loose with setting them."]}),"\n",(0,r.jsx)(n.h2,{id:"alternatives",children:"Alternatives"}),"\n",(0,r.jsx)(n.p,{children:'There are times where it may not be possible to have full git history with a complete checkout. It may also be the case\nthat a complete checkout is undesirable due to the extra time it takes. For these situation, or if using a "standard"\nor "standalone" pipeline configuration, the solution is to force analysis of all current dependencies so that no history\nis needed. This is done with the following flags:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"      steps {\n        // Force analysis for all current dependencies.\n        sh 'phylum-ci -vv --force-analysis --all-deps'\n      }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["It is also possible to make direct use of the ",(0,r.jsxs)(n.a,{href:"https://pypi.org/project/phylum/",children:[(0,r.jsx)(n.code,{children:"phylum"})," Python package"]})," within CI.\nThis may be necessary if the Docker image is unavailable or undesirable for some reason.\nTo use the ",(0,r.jsx)(n.code,{children:"phylum"})," package, install it and call the desired entry points from a script under your control.\nSee the ",(0,r.jsx)(n.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md#installation",children:"Installation"})," and ",(0,r.jsx)(n.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md#usage",children:"Usage"})," sections of the ",(0,r.jsx)(n.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md",children:"README file"})," for more detail."]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},5251:function(e,n,t){var i=t(7294),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var i,s={},c=null,u=null;for(i in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(u=n.ref),n)o.call(n,i)&&!l.hasOwnProperty(i)&&(s[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===s[i]&&(s[i]=n[i]);return{$$typeof:r,type:e,key:c,ref:u,props:s,_owner:a.current}}n.Fragment=s,n.jsx=c,n.jsxs=c},2408:function(e,n){var t=Symbol.for("react.element"),i=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),a=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,y={};function g(e,n,t){this.props=e,this.context=n,this.refs=y,this.updater=t||f}function x(){}function b(e,n,t){this.props=e,this.context=n,this.refs=y,this.updater=t||f}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=g.prototype;var j=b.prototype=new x;j.constructor=b,m(j,g.prototype),j.isPureReactComponent=!0;var v=Array.isArray,k=Object.prototype.hasOwnProperty,w={current:null},_={key:!0,ref:!0,__self:!0,__source:!0};function P(e,n,i){var r,s={},o=null,a=null;if(null!=n)for(r in void 0!==n.ref&&(a=n.ref),void 0!==n.key&&(o=""+n.key),n)k.call(n,r)&&!_.hasOwnProperty(r)&&(s[r]=n[r]);var l=arguments.length-2;if(1===l)s.children=i;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];s.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===s[r]&&(s[r]=l[r]);return{$$typeof:t,type:e,key:o,ref:a,props:s,_owner:w.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var E=/\/+/g;function I(e,n){var t,i;return"object"==typeof e&&null!==e&&null!=e.key?(t=""+e.key,i={"=":"=0",":":"=2"},"$"+t.replace(/[=:]/g,function(e){return i[e]})):n.toString(36)}function T(e,n,r){if(null==e)return e;var s=[],o=0;return!function e(n,r,s,o,a){var l,c,u,h=typeof n;("undefined"===h||"boolean"===h)&&(n=null);var d=!1;if(null===n)d=!0;else switch(h){case"string":case"number":d=!0;break;case"object":switch(n.$$typeof){case t:case i:d=!0}}if(d)return a=a(d=n),n=""===o?"."+I(d,0):o,v(a)?(s="",null!=n&&(s=n.replace(E,"$&/")+"/"),e(a,r,s,"",function(e){return e})):null!=a&&(C(a)&&(l=a,c=s+(!a.key||d&&d.key===a.key?"":(""+a.key).replace(E,"$&/")+"/")+n,a={$$typeof:t,type:l.type,key:c,ref:l.ref,props:l.props,_owner:l._owner}),r.push(a)),1;if(d=0,o=""===o?".":o+":",v(n))for(var f=0;f<n.length;f++){var m=o+I(h=n[f],f);d+=e(h,r,s,m,a)}else if("function"==typeof(m=null===(u=n)||"object"!=typeof u?null:"function"==typeof(u=p&&u[p]||u["@@iterator"])?u:null))for(n=m.call(n),f=0;!(h=n.next()).done;)m=o+I(h=h.value,f++),d+=e(h,r,s,m,a);else if("object"===h)throw Error("Objects are not valid as a React child (found: "+("[object Object]"===(r=String(n))?"object with keys {"+Object.keys(n).join(", ")+"}":r)+"). If you meant to render a collection of children, use an array instead.");return d}(e,s,"","",function(e){return n.call(r,e,o++)}),s}function S(e){if(-1===e._status){var n=e._result;(n=n()).then(function(n){(0===e._status||-1===e._status)&&(e._status=1,e._result=n)},function(n){(0===e._status||-1===e._status)&&(e._status=2,e._result=n)}),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var A={current:null},R={transition:null};function O(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:T,forEach:function(e,n,t){T(e,function(){n.apply(this,arguments)},t)},count:function(e){var n=0;return T(e,function(){n++}),n},toArray:function(e){return T(e,function(e){return e})||[]},only:function(e){if(!C(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=g,n.Fragment=r,n.Profiler=o,n.PureComponent=b,n.StrictMode=s,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:R,ReactCurrentOwner:w},n.act=O,n.cloneElement=function(e,n,i){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,a=e._owner;if(null!=n){if(void 0!==n.ref&&(o=n.ref,a=w.current),void 0!==n.key&&(s=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in n)k.call(n,c)&&!_.hasOwnProperty(c)&&(r[c]=void 0===n[c]&&void 0!==l?l[c]:n[c])}var c=arguments.length-2;if(1===c)r.children=i;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];r.children=l}return{$$typeof:t,type:e.type,key:s,ref:o,props:r,_owner:a}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},n.createElement=P,n.createFactory=function(e){var n=P.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=C,n.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:S}},n.memo=function(e,n){return{$$typeof:h,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=R.transition;R.transition={};try{e()}finally{R.transition=n}},n.unstable_act=O,n.useCallback=function(e,n){return A.current.useCallback(e,n)},n.useContext=function(e){return A.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return A.current.useDeferredValue(e)},n.useEffect=function(e,n){return A.current.useEffect(e,n)},n.useId=function(){return A.current.useId()},n.useImperativeHandle=function(e,n,t){return A.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return A.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return A.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return A.current.useMemo(e,n)},n.useReducer=function(e,n,t){return A.current.useReducer(e,n,t)},n.useRef=function(e){return A.current.useRef(e)},n.useState=function(e){return A.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return A.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return A.current.useTransition()},n.version="18.3.1"},7294:function(e,n,t){e.exports=t(2408)},5893:function(e,n,t){e.exports=t(5251)},65:function(e,n,t){t.d(n,{Z:()=>a,a:()=>o});var i=t(7294);let r={},s=i.createContext(r);function o(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);