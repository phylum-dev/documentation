"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["32"],{671:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,default:()=>d,contentTitle:()=>a,assets:()=>c,toc:()=>l,metadata:()=>r});var r=JSON.parse('{"id":"cli/extensions/extension_example","title":"Extension Example","description":"In this chapter, we\'ll go over a simple real-world example of what a Phylum CLI","source":"@site/../docs/cli/extensions/extension_example.md","sourceDirName":"cli/extensions","slug":"/cli/extensions/extension_example","permalink":"/cli/extensions/extension_example","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/cli/edit/main/docs/extensions/extension_example.md","tags":[],"version":"current","lastUpdatedBy":"Kyle Willmon","lastUpdatedAt":1716331118000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Extension API","permalink":"/cli/extensions/extension_api"},"next":{"title":"Extension Sandboxing","permalink":"/cli/extensions/extension_sandboxing"}}'),s=t(5893),o=t(65);let i={},a="Extension Example",c={},l=[];function u(e){let n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"extension-example",children:"Extension Example"})}),"\n",(0,s.jsx)(n.p,{children:"In this chapter, we'll go over a simple real-world example of what a Phylum CLI\nextension might look like."}),"\n",(0,s.jsx)(n.p,{children:"Our goal is writing an extension which can print out all dependencies with more\nthan one version present in our dependency file."}),"\n",(0,s.jsx)(n.p,{children:"The full example looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { mapValues } from "https://deno.land/std@0.150.0/collections/map_values.ts";\nimport { distinct } from "https://deno.land/std@0.150.0/collections/distinct.ts";\nimport { groupBy } from "https://deno.land/std@0.150.0/collections/group_by.ts";\n\n// Ensure dependency file argument is present.\nif (Deno.args.length != 1) {\n    console.error("Usage: phylum duplicates <DEPENDENCY_FILE>");\n    Deno.exit(1);\n}\n\n// Parse dependency file using Phylum\'s API.\nconst depfile = await Phylum.parseDependencyFile(Deno.args[0]);\n\n// Group all versions for the same dependency together.\nconst groupedDeps = groupBy(depfile.packages, dep => dep.name);\n\n// Reduce each dependency to a list of its versions.\nconst reducedDeps = mapValues(groupedDeps, deps => deps.map(dep => dep.version));\n\nfor (const [dep, versions] of Object.entries(reducedDeps)) {\n    // Deduplicate identical versions.\n    const distinctVersions = distinct(versions);\n\n    // Print all dependencies with more than one version.\n    if (distinctVersions.length > 1) {\n        console.log(`${dep}:`, distinctVersions);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now there's a lot to unpack here, so we'll go through things one by one:"}),"\n",(0,s.jsx)(n.p,{children:"Before we can start writing our extension code, we need to create our new\nextension:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"phylum extension new duplicates\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We can then start writing the extension by replacing ",(0,s.jsx)(n.code,{children:"./duplicates/main.ts"})," with\nour example code:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { mapValues } from "https://deno.land/std@0.150.0/collections/map_values.ts";\nimport { distinct } from "https://deno.land/std@0.150.0/collections/distinct.ts";\nimport { groupBy } from "https://deno.land/std@0.150.0/collections/group_by.ts";\n'})}),"\n",(0,s.jsxs)(n.p,{children:["These are the Deno API imports. We use version ",(0,s.jsx)(n.code,{children:"0.150.0"})," of ",(0,s.jsx)(n.a,{href:"https://deno.land/std",children:"Deno's STD"}),"\nhere and import the required functions by loading them as remote ES modules.\nWe'll go into more detail on what we need these for later."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// Ensure dependency file argument is present.\nif (Deno.args.length != 1) {\n    console.error("Usage: phylum duplicates <DEPENDENCY_FILE>");\n    Deno.exit(1);\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Deno.args"})," variable contains an array with all CLI arguments passed after\nour extension name, so for ",(0,s.jsx)(n.code,{children:"phylum my-extension one two"})," that would be ",(0,s.jsx)(n.code,{children:'["one", "two"]'}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here we make sure that we get exactly one parameter and print a useful help\nmessage to the terminal if no parameter was provided."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Deno.exit"})," function will terminate the extension and return the provided\nerror code."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Parse dependency file using Phylum's API.\nconst depfile = await Phylum.parseDependencyFile(Deno.args[0]);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Phylum's API is exposed in the global ",(0,s.jsx)(n.code,{children:"Phylum"})," object. Here we are using the\n",(0,s.jsx)(n.code,{children:"parseDependencyFile"})," method which reads the lockfile or manifest path passed as\nan argument and returns an object containing all dependencies and the package\necosystem. Since this function is asynchronous, we need to ",(0,s.jsx)(n.code,{children:"await"})," it."]}),"\n",(0,s.jsx)(n.p,{children:"The returned object will look something like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{\n  packages: [\n    { type: "npm", name: "accepts", version: "1.3.8" },\n    { type: "npm", name: "array-flatten", version: "1.1.1" },\n    { type: "npm", name: "accepts", version: "1.0.0" }\n  ],\n  package_type: "npm",\n  path: "package-lock.json"\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Group all versions for the same dependency together.\nconst groupedDeps = groupBy(depfile.packages, dep => dep.name);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Since our package list contains multiple instances of the same dependency, we\nneed to group each instance together to find duplicate versions. Deno's\nconvenient ",(0,s.jsx)(n.code,{children:"groupBy"})," function does this for us automatically and we just need to\ntell it which field to group by using ",(0,s.jsx)(n.code,{children:"dep => dep.name"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This will transform our package list into the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{\n  accepts: [\n      { name: "accepts", version: "1.3.8" },\n      { name: "accepts", version: "1.0.0" }\n  ],\n  "array-flatten": [ { name: "array-flatten", version: "1.1.1" } ]\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Reduce each dependency to a list of its versions.\nconst reducedDeps = mapValues(groupedDeps, deps => deps.map(dep => dep.version));\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Since our dependency structure now contains useless information like ",(0,s.jsx)(n.code,{children:"name"})," and\n",(0,s.jsx)(n.code,{children:"type"}),", we map each of these grouped values to contain only the version numbers\nfor each dependency."]}),"\n",(0,s.jsx)(n.p,{children:"This results in a simple array with all dependencies and their versions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{\n  accepts: ["1.3.8", "1.0.0"],\n  "array-flatten": ["1.1.1"]\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"for (const [dep, versions] of Object.entries(reducedDeps)) {\n"})}),"\n",(0,s.jsx)(n.p,{children:"Since we now have an object containing all dependencies and the required\nversions, we can iterate over all fields in this object to check the number of\nversions it has."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"    // Deduplicate identical versions.\n    const distinctVersions = distinct(versions);\n"})}),"\n",(0,s.jsx)(n.p,{children:"But before we can check the versions themselves, we need to make sure all the\nversions are actually unique. Some dependency files might specify the same\nversion multiple times, so we need to ensure we filter duplicate versions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"    // Print all dependencies with more than one version.\n    if (distinctVersions.length > 1) {\n        console.log(`${dep}: `, distinctVersions);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"With all versions deduplicated, we can finally print out each dependency with\nmore than one version in our dependency file."}),"\n",(0,s.jsx)(n.p,{children:"For our example, the output looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'accepts: [ "1.3.8", "1.0.0" ]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["And that's all the code we need to check for duplicates. Now we can use the\n",(0,s.jsx)(n.code,{children:"phylum extension run"})," subcommand to test the extension without installing it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"phylum extension run ./duplicates ./package-lock.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"This should then print the following error:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'Extension error: Uncaught (in promise) Error: Requires read access to "./package-lock.json"\n    at async Function.parseDependencyFile (deno:phylum:201:16)\n    at async file:///tmp/duplicates/main.ts:12:14\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Phylum's extensions are executed in a sandbox with restricted access to\noperating system APIs. Since we want to read the lockfile from\n",(0,s.jsx)(n.code,{children:"./package-lock.json"})," with the ",(0,s.jsx)(n.code,{children:"parseDependencyFile"})," method, we need to request\nread access to this file ahead of time. All available permissions are documented\nin the ",(0,s.jsx)(n.a,{href:"/cli/extensions/extension_manifest#permissions",children:"extension manifest documentation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["While it would be possible to request read access to just ",(0,s.jsx)(n.code,{children:"./package-lock.json"}),",\nthis would only work for ",(0,s.jsx)(n.code,{children:"package-lock.json"})," files defeating the purpose of\npassing the dependency file as a parameter. Instead, we request read access to\nall files in the working directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[permissions]\nread = ["./"]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively if you wanted to allow read access to any file, so dependency\nfiles outside of the working directory are supported, you could use ",(0,s.jsx)(n.code,{children:"read = true"})," instead."]}),"\n",(0,s.jsxs)(n.p,{children:["Now ",(0,s.jsx)(n.code,{children:"phylum extension run"})," should prompt for these permissions and complete\nwithout any errors if they have been granted. Then we can install and run our\nextension:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"phylum extension install ./duplicates\nphylum duplicates ./package-lock.json\n"})})]})}function d(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},5251:function(e,n,t){var r=t(7294),s=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var r,o={},l=null,u=null;for(r in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(u=n.ref),n)i.call(n,r)&&!c.hasOwnProperty(r)&&(o[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===o[r]&&(o[r]=n[r]);return{$$typeof:s,type:e,key:l,ref:u,props:o,_owner:a.current}}n.Fragment=o,n.jsx=l,n.jsxs=l},2408:function(e,n){var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),a=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),h=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,y={};function x(e,n,t){this.props=e,this.context=n,this.refs=y,this.updater=t||f}function g(){}function j(e,n,t){this.props=e,this.context=n,this.refs=y,this.updater=t||f}x.prototype.isReactComponent={},x.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=x.prototype;var w=j.prototype=new g;w.constructor=j,m(w,x.prototype),w.isPureReactComponent=!0;var v=Array.isArray,_=Object.prototype.hasOwnProperty,b={current:null},k={key:!0,ref:!0,__self:!0,__source:!0};function E(e,n,r){var s,o={},i=null,a=null;if(null!=n)for(s in void 0!==n.ref&&(a=n.ref),void 0!==n.key&&(i=""+n.key),n)_.call(n,s)&&!k.hasOwnProperty(s)&&(o[s]=n[s]);var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];o.children=l}if(e&&e.defaultProps)for(s in c=e.defaultProps)void 0===o[s]&&(o[s]=c[s]);return{$$typeof:t,type:e,key:i,ref:a,props:o,_owner:b.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var D=/\/+/g;function P(e,n){var t,r;return"object"==typeof e&&null!==e&&null!=e.key?(t=""+e.key,r={"=":"=0",":":"=2"},"$"+t.replace(/[=:]/g,function(e){return r[e]})):n.toString(36)}function N(e,n,s){if(null==e)return e;var o=[],i=0;return!function e(n,s,o,i,a){var c,l,u,d=typeof n;("undefined"===d||"boolean"===d)&&(n=null);var p=!1;if(null===n)p=!0;else switch(d){case"string":case"number":p=!0;break;case"object":switch(n.$$typeof){case t:case r:p=!0}}if(p)return a=a(p=n),n=""===i?"."+P(p,0):i,v(a)?(o="",null!=n&&(o=n.replace(D,"$&/")+"/"),e(a,s,o,"",function(e){return e})):null!=a&&(S(a)&&(c=a,l=o+(!a.key||p&&p.key===a.key?"":(""+a.key).replace(D,"$&/")+"/")+n,a={$$typeof:t,type:c.type,key:l,ref:c.ref,props:c.props,_owner:c._owner}),s.push(a)),1;if(p=0,i=""===i?".":i+":",v(n))for(var f=0;f<n.length;f++){var m=i+P(d=n[f],f);p+=e(d,s,o,m,a)}else if("function"==typeof(m=null===(u=n)||"object"!=typeof u?null:"function"==typeof(u=h&&u[h]||u["@@iterator"])?u:null))for(n=m.call(n),f=0;!(d=n.next()).done;)m=i+P(d=d.value,f++),p+=e(d,s,o,m,a);else if("object"===d)throw Error("Objects are not valid as a React child (found: "+("[object Object]"===(s=String(n))?"object with keys {"+Object.keys(n).join(", ")+"}":s)+"). If you meant to render a collection of children, use an array instead.");return p}(e,o,"","",function(e){return n.call(s,e,i++)}),o}function C(e){if(-1===e._status){var n=e._result;(n=n()).then(function(n){(0===e._status||-1===e._status)&&(e._status=1,e._result=n)},function(n){(0===e._status||-1===e._status)&&(e._status=2,e._result=n)}),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},I={transition:null};function $(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:N,forEach:function(e,n,t){N(e,function(){n.apply(this,arguments)},t)},count:function(e){var n=0;return N(e,function(){n++}),n},toArray:function(e){return N(e,function(e){return e})||[]},only:function(e){if(!S(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=x,n.Fragment=s,n.Profiler=i,n.PureComponent=j,n.StrictMode=o,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:I,ReactCurrentOwner:b},n.act=$,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=m({},e.props),o=e.key,i=e.ref,a=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,a=b.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in n)_.call(n,l)&&!k.hasOwnProperty(l)&&(s[l]=void 0===n[l]&&void 0!==c?c[l]:n[l])}var l=arguments.length-2;if(1===l)s.children=r;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];s.children=c}return{$$typeof:t,type:e.type,key:o,ref:i,props:s,_owner:a}},n.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},n.createElement=E,n.createFactory=function(e){var n=E.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:l,render:e}},n.isValidElement=S,n.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:C}},n.memo=function(e,n){return{$$typeof:d,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=I.transition;I.transition={};try{e()}finally{I.transition=n}},n.unstable_act=$,n.useCallback=function(e,n){return R.current.useCallback(e,n)},n.useContext=function(e){return R.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return R.current.useDeferredValue(e)},n.useEffect=function(e,n){return R.current.useEffect(e,n)},n.useId=function(){return R.current.useId()},n.useImperativeHandle=function(e,n,t){return R.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return R.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return R.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return R.current.useMemo(e,n)},n.useReducer=function(e,n,t){return R.current.useReducer(e,n,t)},n.useRef=function(e){return R.current.useRef(e)},n.useState=function(e){return R.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return R.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return R.current.useTransition()},n.version="18.3.1"},7294:function(e,n,t){e.exports=t(2408)},5893:function(e,n,t){e.exports=t(5251)},65:function(e,n,t){t.d(n,{Z:()=>a,a:()=>i});var r=t(7294);let s={},o=r.createContext(s);function i(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);