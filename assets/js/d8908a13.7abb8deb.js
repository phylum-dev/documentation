"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["7795"],{8205:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>d,default:()=>h,contentTitle:()=>r,assets:()=>o,toc:()=>t,metadata:()=>c});var c=JSON.parse('{"id":"cli/commands/phylum_parse","title":"phylum parse","description":"Parse dependency files and output their packages as JSON","source":"@site/../docs/cli/commands/phylum_parse.md","sourceDirName":"cli/commands","slug":"/cli/commands/phylum_parse","permalink":"/cli/commands/phylum_parse","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/cli/edit/main/docs/commands/phylum_parse.md","tags":[],"version":"current","lastUpdatedBy":"Christian D\xfcrr","lastUpdatedAt":1733348290000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"phylum package","permalink":"/cli/commands/phylum_package"},"next":{"title":"phylum ping","permalink":"/cli/commands/phylum_ping"}}'),l=s(5893),i=s(65);let d={},r="phylum parse",o={},t=[{value:"Arguments",id:"arguments",level:2},{value:"Options",id:"options",level:2},{value:"Details",id:"details",level:2},{value:"Examples",id:"examples",level:2}];function a(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"phylum-parse",children:"phylum parse"})}),"\n",(0,l.jsx)(n.p,{children:"Parse dependency files and output their packages as JSON"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"Usage: phylum parse [OPTIONS] [DEPENDENCY_FILE]...\n"})}),"\n",(0,l.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"[DEPENDENCY_FILE]"}),"\n\u2003 Path to the dependency file to parse"]}),"\n",(0,l.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"-t"}),", ",(0,l.jsx)(n.code,{children:"--type"})," ",(0,l.jsx)(n.code,{children:"<TYPE>"}),"\n\u2003 Dependency file type used for all lockfiles (default: auto)\n\u2003 Accepted values: ",(0,l.jsx)(n.code,{children:"npm"}),", ",(0,l.jsx)(n.code,{children:"yarn"}),", ",(0,l.jsx)(n.code,{children:"pnpm"}),", ",(0,l.jsx)(n.code,{children:"gem"}),", ",(0,l.jsx)(n.code,{children:"pip"}),", ",(0,l.jsx)(n.code,{children:"poetry"}),", ",(0,l.jsx)(n.code,{children:"pipenv"}),", ",(0,l.jsx)(n.code,{children:"mvn"}),", ",(0,l.jsx)(n.code,{children:"gradle"}),", ",(0,l.jsx)(n.code,{children:"msbuild"}),", ",(0,l.jsx)(n.code,{children:"nugetlock"}),", ",(0,l.jsx)(n.code,{children:"nugetconfig"}),", ",(0,l.jsx)(n.code,{children:"gomod"}),", ",(0,l.jsx)(n.code,{children:"go"}),", ",(0,l.jsx)(n.code,{children:"cargo"}),", ",(0,l.jsx)(n.code,{children:"spdx"}),", ",(0,l.jsx)(n.code,{children:"cyclonedx"}),", ",(0,l.jsx)(n.code,{children:"auto"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"--skip-sandbox"}),"\n\u2003 Run lockfile generation without sandbox protection"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"--no-generation"}),"\n\u2003 Disable generation of lockfiles from manifests"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"-o"}),", ",(0,l.jsx)(n.code,{children:"--org"})," ",(0,l.jsx)(n.code,{children:"<ORG>"}),"\n\u2003 Phylum organization"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"-v"}),", ",(0,l.jsx)(n.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"-q"}),", ",(0,l.jsx)(n.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"-h"}),", ",(0,l.jsx)(n.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,l.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,l.jsx)(n.p,{children:"The following order is used to determine which dependency file will be parsed:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["CLI ",(0,l.jsx)(n.code,{children:"DEPENDENCY_FILE"})," argument"]}),"\n",(0,l.jsxs)(n.li,{children:["Dependency files in the ",(0,l.jsx)(n.code,{children:".phylum_project"})," file specified during ",(0,l.jsx)(n.code,{children:"phylum init"})]}),"\n",(0,l.jsx)(n.li,{children:"Recursive filesystem search"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["If any of these locations provides a dependency file, no further search will be\ndone. Recursive filesystem search takes common ignore files like ",(0,l.jsx)(n.code,{children:".gitignore"}),"\nand ",(0,l.jsx)(n.code,{children:".ignore"})," into account."]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"# Parse a dependency file\n$ phylum parse package-lock.json\n\n# Parse the `Cargo.lock` and `lockfile` files as cargo dependency files\n$ phylum parse --type cargo Cargo.lock lockfile\n"})})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},65:function(e,n,s){s.d(n,{Z:()=>r,a:()=>d});var c=s(7294);let l={},i=c.createContext(l);function d(e){let n=c.useContext(i);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);