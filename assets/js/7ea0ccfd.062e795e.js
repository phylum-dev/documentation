"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["8446"],{7558:function(e,a,n){n.r(a),n.d(a,{frontMatter:()=>o,toc:()=>r,default:()=>h,metadata:()=>i,assets:()=>c,contentTitle:()=>s});var i=JSON.parse('{"id":"package_firewall/faq","title":"Frequently Asked Questions","description":"What do I do when a dependency fails analysis?","source":"@site/../docs/package_firewall/faq.md","sourceDirName":"package_firewall","slug":"/package_firewall/faq","permalink":"/package_firewall/faq","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/documentation/edit/main/docs/package_firewall/faq.md","tags":[],"version":"current","lastUpdatedBy":"Christian Duerr","lastUpdatedAt":1743440725000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"API","permalink":"/package_firewall/api"},"next":{"title":"Currently Unsupported","permalink":"/package_firewall/unsupported"}}'),t=n(5893),l=n(65);let o={},s="Frequently Asked Questions",c={},r=[{value:"What do I do when a dependency fails analysis?",id:"what-do-i-do-when-a-dependency-fails-analysis",level:2},{value:"Why are some policy-violating packages not being blocked?",id:"why-are-some-policy-violating-packages-not-being-blocked",level:2},{value:"How do I deal with failures due to unprocessed packages?",id:"how-do-i-deal-with-failures-due-to-unprocessed-packages",level:2},{value:"How do I add the package firewall to an existing project?",id:"how-do-i-add-the-package-firewall-to-an-existing-project",level:2}];function d(e){let a={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"frequently-asked-questions",children:"Frequently Asked Questions"})}),"\n",(0,t.jsx)(a.h2,{id:"what-do-i-do-when-a-dependency-fails-analysis",children:"What do I do when a dependency fails analysis?"}),"\n",(0,t.jsx)(a.p,{children:"If a package's installation gets blocked by the firewall, possible malicious\ncode execution will have been blocked, so there's no immediate need for action."}),"\n",(0,t.jsxs)(a.p,{children:["Should you determine the policy violation to be insignificant, you can add an\nexception by navigating to the ",(0,t.jsx)(a.a,{href:"https://app.phylum.io/firewall",children:"firewall overview"}),', selecting the instance\nassociated with the project, then clicking on the "Allow Package" button in the\ntop-right.']}),"\n",(0,t.jsx)(a.h2,{id:"why-are-some-policy-violating-packages-not-being-blocked",children:"Why are some policy-violating packages not being blocked?"}),"\n",(0,t.jsx)(a.p,{children:"The package firewall acts as a proxy between the local package manager and the\nofficial registry. As a result only packages being retrieved from the official\nregistry will be analyzed."}),"\n",(0,t.jsx)(a.p,{children:"Common scenarios where a package will not be analyzed are the usage of a cache\nbetween the package firewall and the local client (like Artifactory, or Nexus),\nand the installation from the local registry cache. While the initial\ninstallation would be analyzed by the package firewall, once cached it will not\nbe re-analyzed."}),"\n",(0,t.jsx)(a.p,{children:"Currently some ecosystems also bypass analysis when a package is installed\ndirectly from a lockfile. This is why new dependencies should always be\ninstalled with the package firewall in place, making sure that the lockfile\ncontains no packages which violate your policy."}),"\n",(0,t.jsx)(a.h2,{id:"how-do-i-deal-with-failures-due-to-unprocessed-packages",children:"How do I deal with failures due to unprocessed packages?"}),"\n",(0,t.jsx)(a.p,{children:"By default, the package firewall considers unprocessed packages as failures, to\navoid running any code that hasn't been analyzed. Any unprocessed package is\nautomatically staged for processing, so the safest option is always to wait\nuntil processing is complete."}),"\n",(0,t.jsxs)(a.p,{children:["If you wish to allow certain, or all, incomplete packages to be considered\nsuccessful for the purpose of the package firewall, you can add an exception by\nnavigating to the ",(0,t.jsx)(a.a,{href:"https://app.phylum.io/firewall",children:"firewall overview"}),', selecting the instance associated with\nthe project, then clicking on the "Allow Incomplete" button in the top-right.']}),"\n",(0,t.jsx)(a.h2,{id:"how-do-i-add-the-package-firewall-to-an-existing-project",children:"How do I add the package firewall to an existing project?"}),"\n",(0,t.jsxs)(a.p,{children:["To setup the package firewall for a specific project, you can look at the\ndocumentation for the specific ",(0,t.jsx)(a.a,{href:"/package_firewall/about#package-registries",children:"package registries"}),"."]}),"\n",(0,t.jsx)(a.p,{children:"An important factor for existing projects is the existence of a lockfile and\nlocal caches. Since versions in the lockfile might be cached locally, you should\nmake sure they pass your policy by analyzing the lockfile once before relying on\nthe package firewall to analyze new packages and versions. Deleting the lockfile\nor clearing local caches will also allow full analysis through the package\nfirewall, but is more error prone due to the required technical knowledge."})]})}function h(e={}){let{wrapper:a}={...(0,l.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65:function(e,a,n){n.d(a,{Z:()=>s,a:()=>o});var i=n(7294);let t={},l=i.createContext(t);function o(e){let a=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:a},e.children)}}}]);