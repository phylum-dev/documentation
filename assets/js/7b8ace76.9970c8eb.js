"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["3171"],{1977:function(e,n,l){l.r(n),l.d(n,{frontMatter:()=>d,default:()=>h,toc:()=>a,metadata:()=>s,assets:()=>r,contentTitle:()=>o});var s=JSON.parse('{"id":"cli/commands/phylum_analyze","title":"phylum analyze","description":"Submit a request for analysis to the processing system","source":"@site/../docs/cli/commands/phylum_analyze.md","sourceDirName":"cli/commands","slug":"/cli/commands/phylum_analyze","permalink":"/cli/commands/phylum_analyze","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/cli/edit/main/docs/commands/phylum_analyze.md","tags":[],"version":"current","lastUpdatedBy":"Christian D\xfcrr","lastUpdatedAt":1733348290000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"phylum","permalink":"/cli/commands/phylum"},"next":{"title":"phylum auth","permalink":"/cli/commands/phylum_auth"}}'),c=l(5893),i=l(65);let d={},o="phylum analyze",r={},a=[{value:"Arguments",id:"arguments",level:2},{value:"Options",id:"options",level:2},{value:"Details",id:"details",level:2},{value:"Examples",id:"examples",level:2}];function t(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"phylum-analyze",children:"phylum analyze"})}),"\n",(0,c.jsx)(n.p,{children:"Submit a request for analysis to the processing system"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"Usage: phylum analyze [OPTIONS] [DEPENDENCY_FILE]...\n"})}),"\n",(0,c.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"[DEPENDENCY_FILE]"}),"\n\u2003 Path to the dependency file to submit"]}),"\n",(0,c.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-l"}),", ",(0,c.jsx)(n.code,{children:"--label"})," ",(0,c.jsx)(n.code,{children:"<LABEL>"}),"\n\u2003 Specify a label to use for analysis"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-j"}),", ",(0,c.jsx)(n.code,{children:"--json"}),"\n\u2003 Produce output in json format (default: false)"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-p"}),", ",(0,c.jsx)(n.code,{children:"--project"})," ",(0,c.jsx)(n.code,{children:"<PROJECT_NAME>"}),"\n\u2003 Specify a project to use for analysis"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-g"}),", ",(0,c.jsx)(n.code,{children:"--group"})," ",(0,c.jsx)(n.code,{children:"<GROUP_NAME>"}),"\n\u2003 Specify a group to use for analysis"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-t"}),", ",(0,c.jsx)(n.code,{children:"--type"})," ",(0,c.jsx)(n.code,{children:"<TYPE>"}),"\n\u2003 Dependency file type used for all lockfiles (default: auto)\n\u2003 Accepted values: ",(0,c.jsx)(n.code,{children:"npm"}),", ",(0,c.jsx)(n.code,{children:"yarn"}),", ",(0,c.jsx)(n.code,{children:"pnpm"}),", ",(0,c.jsx)(n.code,{children:"gem"}),", ",(0,c.jsx)(n.code,{children:"pip"}),", ",(0,c.jsx)(n.code,{children:"poetry"}),", ",(0,c.jsx)(n.code,{children:"pipenv"}),", ",(0,c.jsx)(n.code,{children:"mvn"}),", ",(0,c.jsx)(n.code,{children:"gradle"}),", ",(0,c.jsx)(n.code,{children:"msbuild"}),", ",(0,c.jsx)(n.code,{children:"nugetlock"}),", ",(0,c.jsx)(n.code,{children:"nugetconfig"}),", ",(0,c.jsx)(n.code,{children:"gomod"}),", ",(0,c.jsx)(n.code,{children:"go"}),", ",(0,c.jsx)(n.code,{children:"cargo"}),", ",(0,c.jsx)(n.code,{children:"spdx"}),", ",(0,c.jsx)(n.code,{children:"cyclonedx"}),", ",(0,c.jsx)(n.code,{children:"auto"})]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"--skip-sandbox"}),"\n\u2003 Run lockfile generation without sandbox protection"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"--no-generation"}),"\n\u2003 Disable generation of lockfiles from manifests"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-o"}),", ",(0,c.jsx)(n.code,{children:"--org"})," ",(0,c.jsx)(n.code,{children:"<ORG>"}),"\n\u2003 Phylum organization"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-v"}),", ",(0,c.jsx)(n.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-q"}),", ",(0,c.jsx)(n.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-h"}),", ",(0,c.jsx)(n.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,c.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,c.jsx)(n.p,{children:"The following order is used to determine which dependency file will be analyzed:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["CLI ",(0,c.jsx)(n.code,{children:"DEPENDENCY_FILE"})," argument"]}),"\n",(0,c.jsxs)(n.li,{children:["Dependency files in the ",(0,c.jsx)(n.code,{children:".phylum_project"})," file specified during ",(0,c.jsx)(n.code,{children:"phylum init"})]}),"\n",(0,c.jsx)(n.li,{children:"Recursive filesystem search"}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["If any of these locations provides a dependency file, no further search will be\ndone. Recursive filesystem search takes common ignore files like ",(0,c.jsx)(n.code,{children:".gitignore"}),"\nand ",(0,c.jsx)(n.code,{children:".ignore"})," into account."]}),"\n",(0,c.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"# Analyze your project's default dependency files\n$ phylum analyze\n\n# Analyze a Maven lockfile with a verbose json response\n$ phylum analyze --json --verbose effective-pom.xml\n\n# Analyze a PyPI dependency file and apply a label\n$ phylum analyze --label test_branch requirements.txt\n\n# Analyze a Poetry lockfile and return the results to the `sample` project\n$ phylum analyze -p sample poetry.lock\n\n# Analyze a NuGet lockfile using the `sample` project and `sGroup` group\n$ phylum analyze -p sample -g sGroup packages.lock.json\n\n# Analyze a RubyGems lockfile and return a verbose response with only critical malware\n$ phylum analyze --verbose --filter=crit,mal Gemfile.lock\n\n# Analyze the `Cargo.lock` and `lockfile` files as cargo dependency files\n$ phylum analyze --type cargo Cargo.lock lockfile\n"})})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}},65:function(e,n,l){l.d(n,{Z:()=>o,a:()=>d});var s=l(7294);let c={},i=s.createContext(c);function d(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);