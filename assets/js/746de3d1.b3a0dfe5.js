"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1949],{89:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=s(4848),o=s(8453);const a={},c="Policy Examples",l={id:"knowledge_base/policy_examples",title:"Policy Examples",description:"The policy transforms your threat model into a description of why the job is being blocked. There are multiple ways to define why a job should be blocked.",source:"@site/../docs/knowledge_base/policy_examples.md",sourceDirName:"knowledge_base",slug:"/knowledge_base/policy_examples",permalink:"/knowledge_base/policy_examples",draft:!1,unlisted:!1,editUrl:"https://github.com/phylum-dev/documentation/edit/main/docs/knowledge_base/policy_examples.md",tags:[],version:"current",lastUpdatedBy:"Charles Coggins",lastUpdatedAt:1703286129,formattedLastUpdatedAt:"Dec 22, 2023",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Policy Development",permalink:"/knowledge_base/policy_development"},next:{title:"Policy Application",permalink:"/knowledge_base/policy_apply"}},t={},d=[{value:"Blocking an issue",id:"blocking-an-issue",level:2},{value:"Blocking a dependency",id:"blocking-a-dependency",level:2},{value:"Blocking a job",id:"blocking-a-job",level:2}];function r(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"policy-examples",children:"Policy Examples"}),"\n",(0,i.jsx)(n.p,{children:"The policy transforms your threat model into a description of why the job is being blocked. There are multiple ways to define why a job should be blocked."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"METADATA"})," block contains ",(0,i.jsx)(n.code,{children:"OPA"})," ",(0,i.jsx)(n.a,{href:"https://www.openpolicyagent.org/docs/latest/annotations/",children:"Annotations"})," which correlate to the schema and can be used for type checking."]}),"\n",(0,i.jsx)(n.h2,{id:"blocking-an-issue",children:"Blocking an issue"}),"\n",(0,i.jsx)(n.p,{children:"The most common reason to block a job is because one of the dependencies has a known issue within one of Phylum's risk domains."}),"\n",(0,i.jsxs)(n.p,{children:["The following policy shows ways to block using an ",(0,i.jsx)(n.code,{children:"issue"})," rule based on a per-domain threshold."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rego",children:'package policy\n\nimport data.phylum.domain\nimport data.phylum.level\nimport future.keywords.contains\nimport future.keywords.if\nimport future.keywords.in\n\n# METADATA\n# scope: rule\n# schemas:\n#   - data.issue: schema.issue\nissue contains "risk level cannot exceed medium" if {\n  data.issue.domain in {domain.AUTHOR, domain.ENGINEERING, domain.VULNERABILITY}\n  data.issue.severity > level.MEDIUM\n}\n\n# METADATA\n# scope: rule\n# schemas:\n#   - data.issue: schema.issue\nissue contains "malicious risk level cannot exceed low" if {\n  data.issue.domain == domain.MALICIOUS\n  data.issue.severity > level.LOW\n}\n\n# METADATA\n# scope: rule\n# schemas:\n#   - data.issue: schema.issue\nissue contains "license risk level cannot exceed high" if {\n  data.issue.domain == domain.LICENSE\n  data.issue.severity > level.HIGH\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "dependencies": [{\n        "ecosystem": "pypi",\n        "id": "07a3feb6-d6fb-523a-88f0-9896b86e6f93",\n        "issues": [{\n            "domain": "malicious",\n            "severity": 4,\n            "tag": "CM0004"\n        }],\n        "issues_complete": true,\n        "name": "example-package",\n        "version": "1.0.0"\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "dependencies": [\n    {\n      "errors": [],\n      "id": "07a3feb6-d6fb-523a-88f0-9896b86e6f93",\n      "issues": [\n        {\n          "reason": "malicious risk level cannot exceed low",\n          "tag": "CM0004"\n        }\n      ]\n    }\n  ],\n  "errors": []\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report naming the package and describing the issue."}),"\n",(0,i.jsx)(n.h2,{id:"blocking-a-dependency",children:"Blocking a dependency"}),"\n",(0,i.jsxs)(n.p,{children:["You may also block on a dependency-level characteristic using a ",(0,i.jsx)(n.code,{children:"dependency"})," rule."]}),"\n",(0,i.jsx)(n.p,{children:"The following policy blocks packages belonging to a namespace."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rego",children:'package policy\n\nimport future.keywords.contains\nimport future.keywords.if\n\n# METADATA\n# scope: rule\n# schemas:\n#   - data.dependency: schema.dependency\ndependency contains "AGPL licensed software is not allowed." if {\n        regex.match("(?i)\\\\bAGPL\\\\b", data.dependency.license)\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "dependencies": [{\n        "ecosystem": "npm",\n        "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n        "issues": [],\n        "issues_complete": true,\n        "license": "AGPL-3.0",\n        "name": "example-package",\n        "version": "1.0.0"\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "dependencies": [\n    {\n      "errors": [\n        "AGPL licensed software is not allowed."\n      ],\n      "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n      "issues": []\n    }\n  ],\n  "errors": []\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report naming the package and providing this message in the output."}),"\n",(0,i.jsx)(n.h2,{id:"blocking-a-job",children:"Blocking a job"}),"\n",(0,i.jsxs)(n.p,{children:["If a policy wants to block a job for a reason that is not related to a specific dependency, the policy can use a ",(0,i.jsx)(n.code,{children:"job"})," rule."]}),"\n",(0,i.jsx)(n.p,{children:"The following policy blocks any job that introduces an NPM dependency. Only one error is generated, even if hundreds of dependencies have been added."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rego",children:'package policy\n\nimport data.phylum.ecosystem\nimport future.keywords.contains\nimport future.keywords.if\nimport future.keywords.in\n\n# METADATA\n# scope: rule\n# schemas:\n#   - data.job: schema.job\njob contains "This project must not have NPM dependencies." if {\n        some deps in input.dependencies\n        deps.ecosystem == ecosystem.NPM\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Given the following input:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "dependencies": [{\n        "ecosystem": "npm",\n        "id": "4cc36d79-b8ce-5b7d-89c1-6f6a31f59819",\n        "issues": [],\n        "issues_complete": true,\n        "name": "example-package",\n        "version": "1.0.0"\n    }]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When the policy fails, the output will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "dependencies": [],\n  "errors": [\n    "This project must not have NPM dependencies."\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"When Phylum sees this output from the policy, it will block the job and generate a report providing this message in the output."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var i=s(6540);const o={},a=i.createContext(o);function c(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);