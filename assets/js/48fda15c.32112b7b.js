"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["3138"],{6838:function(e,t,n){n.r(t),n.d(t,{default:()=>a,frontMatter:()=>o,metadata:()=>s,assets:()=>c,toc:()=>p,contentTitle:()=>r});var s=JSON.parse('{"id":"cli/commands/phylum_project_list","title":"phylum project list","description":"List all existing projects","source":"@site/../docs/cli/commands/phylum_project_list.md","sourceDirName":"cli/commands","slug":"/cli/commands/phylum_project_list","permalink":"/cli/commands/phylum_project_list","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/cli/edit/main/docs/commands/phylum_project_list.md","tags":[],"version":"current","lastUpdatedBy":"Christian D\xfcrr","lastUpdatedAt":1725993459000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"phylum project link","permalink":"/cli/commands/phylum_project_link"},"next":{"title":"phylum project status","permalink":"/cli/commands/phylum_project_status"}}'),l=n("5893"),i=n("65");let o={},r="phylum project list",c={},p=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2}];function d(e){let t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"phylum-project-list",children:"phylum project list"})}),"\n",(0,l.jsx)(t.p,{children:"List all existing projects"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-sh",children:"Usage: phylum project list [OPTIONS]\n"})}),"\n",(0,l.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"-j"}),", ",(0,l.jsx)(t.code,{children:"--json"}),"\n\u2003 Produce output in json format (default: false)"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"-g"}),", ",(0,l.jsx)(t.code,{children:"--group"})," ",(0,l.jsx)(t.code,{children:"<GROUP_NAME>"}),"\n\u2003 Group to list projects for"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"--no-group"}),"\n\u2003 Exclude all group projects from the output"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"-o"}),", ",(0,l.jsx)(t.code,{children:"--org"})," ",(0,l.jsx)(t.code,{children:"<ORG>"}),"\n\u2003 Phylum organization"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"-v"}),", ",(0,l.jsx)(t.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"-q"}),", ",(0,l.jsx)(t.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"-h"}),", ",(0,l.jsx)(t.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,l.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-sh",children:"# List all existing projects\n$ phylum project list\n\n# List all existing projects with json output\n$ phylum project list --json\n\n# List all existing projects for the `sample` group\n$ phylum project list -g sample\n\n# List all existing projects for the `demo` organization\n$ phylum project list --organization demo\n"})})]})}function a(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},65:function(e,t,n){n.d(t,{Z:function(){return r},a:function(){return o}});var s=n(7294);let l={},i=s.createContext(l);function o(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);