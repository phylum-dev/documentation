"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6962],{8086:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>t});var c=s(5893),l=s(1151);const i={},d="phylum parse",r={id:"cli/commands/phylum_parse",title:"phylum parse",description:"Parse dependency files and output their packages as JSON",source:"@site/../docs/cli/commands/phylum_parse.md",sourceDirName:"cli/commands",slug:"/cli/commands/phylum_parse",permalink:"/cli/commands/phylum_parse",draft:!1,unlisted:!1,editUrl:"https://github.com/phylum-dev/cli/edit/main/docs/commands/phylum_parse.md",tags:[],version:"current",lastUpdatedBy:"Charles Coggins",lastUpdatedAt:1703279877,formattedLastUpdatedAt:"Dec 22, 2023",frontMatter:{},sidebar:"docsSidebar",previous:{title:"phylum package",permalink:"/cli/commands/phylum_package"},next:{title:"phylum ping",permalink:"/cli/commands/phylum_ping"}},o={},t=[{value:"Arguments",id:"arguments",level:2},{value:"Options",id:"options",level:2},{value:"Details",id:"details",level:2},{value:"Examples",id:"examples",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"phylum-parse",children:"phylum parse"}),"\n",(0,c.jsx)(n.p,{children:"Parse dependency files and output their packages as JSON"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"Usage: phylum parse [OPTIONS] [DEPENDENCY_FILE]...\n"})}),"\n",(0,c.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"[DEPENDENCY_FILE]"}),"\n\u2003 Path to the dependency file to parse"]}),"\n",(0,c.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-t"}),", ",(0,c.jsx)(n.code,{children:"--type"})," ",(0,c.jsx)(n.code,{children:"<TYPE>"}),"\n\u2003 Dependency file type used for all lockfiles (default: auto)\n\u2003 Accepted values: ",(0,c.jsx)(n.code,{children:"npm"}),", ",(0,c.jsx)(n.code,{children:"yarn"}),", ",(0,c.jsx)(n.code,{children:"pnpm"}),", ",(0,c.jsx)(n.code,{children:"gem"}),", ",(0,c.jsx)(n.code,{children:"pip"}),", ",(0,c.jsx)(n.code,{children:"poetry"}),", ",(0,c.jsx)(n.code,{children:"pipenv"}),", ",(0,c.jsx)(n.code,{children:"mvn"}),", ",(0,c.jsx)(n.code,{children:"gradle"}),", ",(0,c.jsx)(n.code,{children:"nugetlock"}),", ",(0,c.jsx)(n.code,{children:"msbuild"}),", ",(0,c.jsx)(n.code,{children:"go"}),", ",(0,c.jsx)(n.code,{children:"cargo"}),", ",(0,c.jsx)(n.code,{children:"spdx"}),", ",(0,c.jsx)(n.code,{children:"cyclonedx"}),", ",(0,c.jsx)(n.code,{children:"auto"})]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"--skip-sandbox"}),"\n\u2003 Run lockfile generation without sandbox protection"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"--no-generation"}),"\n\u2003 Disable generation of lockfiles from manifests"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-v"}),", ",(0,c.jsx)(n.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-q"}),", ",(0,c.jsx)(n.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"-h"}),", ",(0,c.jsx)(n.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,c.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,c.jsx)(n.p,{children:"The following order is used to determine which dependency file will be parsed:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["CLI ",(0,c.jsx)(n.code,{children:"DEPENDENCY_FILE"})," argument"]}),"\n",(0,c.jsxs)(n.li,{children:["Dependency files in the ",(0,c.jsx)(n.code,{children:".phylum_project"})," file specified during ",(0,c.jsx)(n.code,{children:"phylum init"})]}),"\n",(0,c.jsx)(n.li,{children:"Recursive filesystem search"}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["If any of these locations provides a dependency file, no further search will be\ndone. Recursive filesystem search takes common ignore files like ",(0,c.jsx)(n.code,{children:".gitignore"}),"\nand ",(0,c.jsx)(n.code,{children:".ignore"})," into account."]}),"\n",(0,c.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"# Parse a dependency file\n$ phylum parse package-lock.json\n\n# Parse the `Cargo.lock` and `lockfile` files as cargo dependency files\n$ phylum parse --type cargo Cargo.lock lockfile\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>d});var c=s(7294);const l={},i=c.createContext(l);function d(e){const n=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);