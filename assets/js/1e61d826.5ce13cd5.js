"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["9070"],{4659:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>i,default:()=>d,toc:()=>c,metadata:()=>t,assets:()=>l,contentTitle:()=>s});var t=JSON.parse('{"id":"package_firewall/maven","title":"Phylum Maven Registry","description":"The Phylum Maven registry is based on [Maven central].","source":"@site/../docs/package_firewall/maven.md","sourceDirName":"package_firewall","slug":"/package_firewall/maven","permalink":"/package_firewall/maven","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/documentation/edit/main/docs/package_firewall/maven.md","tags":[],"version":"current","lastUpdatedBy":"Christian Duerr","lastUpdatedAt":1742864817000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Phylum Golang Proxy","permalink":"/package_firewall/golang"},"next":{"title":"Phylum NPM Registry","permalink":"/package_firewall/npm"}}'),o=a(5893),r=a(65);let i={},s="Phylum Maven Registry",l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"<code>mvn</code>",id:"mvn",level:3},{value:"Gradle",id:"gradle",level:3}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"phylum-maven-registry",children:"Phylum Maven Registry"})}),"\n",(0,o.jsxs)(n.p,{children:["The Phylum Maven registry is based on ",(0,o.jsx)(n.a,{href:"https://maven.apache.org/repositories/index.html",children:"Maven central"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["All configuration options will require a Phylum API key, since Phylum requires\nauthentication. You can find out how to generate one in our\n",(0,o.jsx)(n.a,{href:"/knowledge_base/api-keys#generate-an-api-key",children:"API Keys documentation"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In the following examples, all API keys will be represented as\n",(0,o.jsx)(n.code,{children:"<PHYLUM_API_KEY>"}),", so make sure to replace them with your generated key."]}),"\n",(0,o.jsxs)(n.p,{children:["Additionally, if the default policy is not sufficient, a group can be passed to\nevaluate all packages against the group's policy. To do this, just replace\n",(0,o.jsx)(n.code,{children:"<PHYLUM_ORG>"})," and ",(0,o.jsx)(n.code,{children:"<PHYLUM_GROUP>"})," with the desired org and group name. The\nsupplied API key ",(0,o.jsx)(n.strong,{children:"must"})," have access to this group."]}),"\n",(0,o.jsxs)(n.p,{children:["If Phylum's default ",(0,o.jsx)(n.a,{href:"/knowledge_base/policy",children:"policy"})," is sufficient, you can omit the username from the\nauthentication details."]}),"\n",(0,o.jsx)(n.h3,{id:"mvn",children:(0,o.jsx)(n.code,{children:"mvn"})}),"\n",(0,o.jsx)(n.p,{children:"The Phylum authorization header expects a token in Base64, so you first need to\nconvert your Phylum org, group, and API key:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'printf "<PHYLUM_ORG>/<PHYLUM_GROUP>:<PHYLUM_API_KEY>" | base64\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u26A0\uFE0F ",(0,o.jsx)(n.strong,{children:"WARNING"})," \u26A0\uFE0F"]}),"\n",(0,o.jsx)(n.p,{children:"Do not accidentally save your token into your shell history."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Custom Maven registries can be configured in the ",(0,o.jsx)(n.code,{children:"~/.m2/settings.xml"}),"\nfile. Replace ",(0,o.jsx)(n.code,{children:"[BASE64_OUTPUT]"})," in this XML with the token you've created in the\nprevious step:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0\n                      http://maven.apache.org/xsd/settings-1.0.0.xsd">\n  <servers>\n    <server>\n      <id>phylum</id>\n      <configuration>\n        <httpHeaders>\n          <property>\n            <name>Authorization</name>\n            <value>Basic [BASE64_OUTPUT]</value>\n          </property>\n        </httpHeaders>\n      </configuration>\n    </server>\n  </servers>\n\n  <mirrors>\n    <mirror>\n      <id>phylum</id>\n      <name>Phylum</name>\n      <url>https://maven.phylum.io</url>\n      <mirrorOf>central</mirrorOf>\n    </mirror>\n  </mirrors>\n</settings>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["A blocked package will show up in ",(0,o.jsx)(n.code,{children:"mvn"})," output as missing:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  6.871 s\n[INFO] Finished at: 2024-10-29T18:44:40+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project demo: Could not collect dependencies for project io.phylum:demo:jar:1.0-SNAPSHOT\n[ERROR] Failed to read artifact descriptor for commons-io:commons-io:jar:2.17.0\n[ERROR]     Caused by: The following artifacts could not be resolved: commons-io:commons-io:pom:2.17.0 (absent): Could not transfer artifact commons-io:commons-io:pom:2.17.0 from/to phylum (https://maven.phylum.io): status code: 424, reason phrase: Failed Dependency (424)\n[ERROR]\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.strong,{children:"all"})," versions of a package are blocked, it will be explicitly pointed out\nas having failed analysis:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"[WARNING] Could not transfer metadata org.apache.maven.plugins:maven-archetype-plugin/maven-metadata.xml from/to phylum (https://maven.phylum.io): status code: 424, reason phrase: \"pkg:maven/org.apache.maven.plugins/maven-archetype-plugin\" failed Phylum analysis (424)\n[WARNING] Plugin not found in any plugin repository: org.apache.maven.plugins:maven-archetype-plugin\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  6.753 s\n[INFO] Finished at: 2025-03-17T17:28:12+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Error resolving version for plugin 'org.apache.maven.plugins:maven-archetype-plugin' from the repositories [local (/Users/cdurr/.m2/repository), phylum (https://maven.phylum.io)]: Plugin not found in any plugin repository -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginVersionResolutionException\n"})}),"\n",(0,o.jsx)(n.p,{children:"If a version range is accepted by the manifest, the package manager will\nautomatically attempt to use a version that passes Phylum's policy."}),"\n",(0,o.jsx)(n.h3,{id:"gradle",children:"Gradle"}),"\n",(0,o.jsxs)(n.p,{children:["Custom registries can be configured in the ",(0,o.jsx)(n.code,{children:"~/.gradle/init.gradle"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-groovy",children:'allprojects {\n    repositories {\n        // Deactivate all registries which aren\'t protected.\n        all { ArtifactRepository repo ->\n            if (repo.url.toString() != "https://maven.phylum.io") {\n                remove repo\n            }\n        }\n\n        maven {\n            url = "https://maven.phylum.io"\n            credentials {\n                username = "<PHYLUM_ORG>/<PHYLUM_GROUP>"\n                password = "<PHYLUM_API_KEY>"\n            }\n        }\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["A blocked package will show up in ",(0,o.jsx)(n.code,{children:"gradle"})," output as failed:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"runtimeClasspath - Runtime classpath of source set 'main'.\n+--- com.google.code.gson:gson:2.10.1 FAILED\n+--- com.google.code.gson:gson:{strictly 2.10.1} -> 2.10.1 FAILED\n\\--- com.google.code.gson:gson:2.10.1 FAILED\n"})}),"\n",(0,o.jsx)(n.p,{children:"If a version range is accepted by the manifest, the package manager will\nautomatically attempt to use a version that passes Phylum's policy."})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},65:function(e,n,a){a.d(n,{Z:()=>s,a:()=>i});var t=a(7294);let o={},r=t.createContext(o);function i(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);