"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6203],{4201:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var s=n(4848),o=n(8453);const i={},l="phylum project list",c={id:"cli/commands/phylum_project_list",title:"phylum project list",description:"List all existing projects",source:"@site/../docs/cli/commands/phylum_project_list.md",sourceDirName:"cli/commands",slug:"/cli/commands/phylum_project_list",permalink:"/cli/commands/phylum_project_list",draft:!1,unlisted:!1,editUrl:"https://github.com/phylum-dev/cli/edit/main/docs/commands/phylum_project_list.md",tags:[],version:"current",lastUpdatedBy:"Christian D\xfcrr",lastUpdatedAt:1725993459e3,frontMatter:{},sidebar:"docsSidebar",previous:{title:"phylum project link",permalink:"/cli/commands/phylum_project_link"},next:{title:"phylum project status",permalink:"/cli/commands/phylum_project_status"}},r={},p=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"phylum-project-list",children:"phylum project list"})}),"\n",(0,s.jsx)(t.p,{children:"List all existing projects"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"Usage: phylum project list [OPTIONS]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"-j"}),", ",(0,s.jsx)(t.code,{children:"--json"}),"\n\u2003 Produce output in json format (default: false)"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"-g"}),", ",(0,s.jsx)(t.code,{children:"--group"})," ",(0,s.jsx)(t.code,{children:"<GROUP_NAME>"}),"\n\u2003 Group to list projects for"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"--no-group"}),"\n\u2003 Exclude all group projects from the output"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"-o"}),", ",(0,s.jsx)(t.code,{children:"--org"})," ",(0,s.jsx)(t.code,{children:"<ORG>"}),"\n\u2003 Phylum organization"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"-v"}),", ",(0,s.jsx)(t.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"-q"}),", ",(0,s.jsx)(t.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"-h"}),", ",(0,s.jsx)(t.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"# List all existing projects\n$ phylum project list\n\n# List all existing projects with json output\n$ phylum project list --json\n\n# List all existing projects for the `sample` group\n$ phylum project list -g sample\n\n# List all existing projects for the `demo` organization\n$ phylum project list --organization demo\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var s=n(6540);const o={},i=s.createContext(o);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);