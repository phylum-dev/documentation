"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6693],{7379:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>a,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var i=c(5893),d=c(1151);const t={title:"phylum init",category:"6255e67693d5200013b1fa3e",hidden:!1},s=void 0,l={id:"cli/commands/phylum_init",title:"phylum init",description:"Setup a new Phylum project",source:"@site/../docs/cli/commands/phylum_init.md",sourceDirName:"cli/commands",slug:"/cli/commands/phylum_init",permalink:"/cli/commands/phylum_init",draft:!1,unlisted:!1,editUrl:"https://github.com/phylum-dev/documentation/tree/main/site/../docs/cli/commands/phylum_init.md",tags:[],version:"current",lastUpdatedBy:"Christian D\xfcrr",lastUpdatedAt:1701985169,formattedLastUpdatedAt:"Dec 7, 2023",frontMatter:{title:"phylum init",category:"6255e67693d5200013b1fa3e",hidden:!1},sidebar:"cliSidebar",previous:{title:"phylum history",permalink:"/cli/commands/phylum_history"},next:{title:"phylum package",permalink:"/cli/commands/phylum_package"}},r={},o=[{value:"Arguments",id:"arguments",level:3},{value:"Options",id:"options",level:3},{value:"Examples",id:"examples",level:3}];function h(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Setup a new Phylum project"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"Usage: phylum init [OPTIONS] [PROJECT_NAME]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"[PROJECT_NAME]"}),"\n\u2003 Phylum project name"]}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-g"}),", ",(0,i.jsx)(n.code,{children:"--group"})," ",(0,i.jsx)(n.code,{children:"<GROUP_NAME>"}),"\n\u2003 Group which will be the owner of the project"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-d"}),", ",(0,i.jsx)(n.code,{children:"--dependency-file"})," ",(0,i.jsx)(n.code,{children:"<DEPENDENCY_FILE>"}),"\n\u2003 Project-relative dependency file path"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-t"}),", ",(0,i.jsx)(n.code,{children:"--type"})," ",(0,i.jsx)(n.code,{children:"<TYPE>"}),"\n\u2003 Dependency file type used for all lockfiles (default: auto)\n\u2003 Accepted values: ",(0,i.jsx)(n.code,{children:"npm"}),", ",(0,i.jsx)(n.code,{children:"yarn"}),", ",(0,i.jsx)(n.code,{children:"pnpm"}),", ",(0,i.jsx)(n.code,{children:"gem"}),", ",(0,i.jsx)(n.code,{children:"pip"}),", ",(0,i.jsx)(n.code,{children:"poetry"}),", ",(0,i.jsx)(n.code,{children:"pipenv"}),", ",(0,i.jsx)(n.code,{children:"mvn"}),", ",(0,i.jsx)(n.code,{children:"gradle"}),", ",(0,i.jsx)(n.code,{children:"nugetlock"}),", ",(0,i.jsx)(n.code,{children:"msbuild"}),", ",(0,i.jsx)(n.code,{children:"go"}),", ",(0,i.jsx)(n.code,{children:"cargo"}),", ",(0,i.jsx)(n.code,{children:"spdx"}),", ",(0,i.jsx)(n.code,{children:"cyclonedx"}),", ",(0,i.jsx)(n.code,{children:"auto"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-f"}),", ",(0,i.jsx)(n.code,{children:"--force"}),"\n\u2003 Overwrite existing configurations without confirmation"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-r"}),", ",(0,i.jsx)(n.code,{children:"--repository-url"})," ",(0,i.jsx)(n.code,{children:"<REPOSITORY_URL>"}),"\n\u2003 Repository URL of the project"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-v"}),", ",(0,i.jsx)(n.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-q"}),", ",(0,i.jsx)(n.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-h"}),", ",(0,i.jsx)(n.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"# Interactively initialize the Phylum project.\n$ phylum init\n\n# Create the `demo` project with a yarn lockfile and no associated group.\n$ phylum init --dependency-file yarn.lock --type yarn demo\n"})})]})}function a(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,c)=>{c.d(n,{Z:()=>l,a:()=>s});var i=c(7294);const d={},t=i.createContext(d);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);