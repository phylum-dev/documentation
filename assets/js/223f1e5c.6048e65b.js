"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["1847"],{7924:function(e,i,n){n.r(i),n.d(i,{default:()=>d,frontMatter:()=>o,metadata:()=>s,assets:()=>l,toc:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"phylum-ci/azure_pipelines","title":"Azure Pipelines Integration","description":"Overview","source":"@site/../docs/phylum-ci/azure_pipelines.md","sourceDirName":"phylum-ci","slug":"/phylum-ci/azure_pipelines","permalink":"/phylum-ci/azure_pipelines","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/phylum-ci/edit/main/docs/integrations/azure_pipelines.md","tags":[],"version":"current","lastUpdatedBy":"Charles Coggins","lastUpdatedAt":1736871528000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Integrations Overview","permalink":"/integrations/integrations_overview"},"next":{"title":"Bitbucket Pipelines Integration","permalink":"/phylum-ci/bitbucket_pipelines"}}'),t=n(5893),r=n(65);let o={},a="Azure Pipelines Integration",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configure <code>azure-pipelines.yml</code>",id:"configure-azure-pipelinesyml",level:2},{value:"Pipeline control",id:"pipeline-control",level:3},{value:"Job names",id:"job-names",level:3},{value:"Pool selection",id:"pool-selection",level:3},{value:"Docker image selection",id:"docker-image-selection",level:3},{value:"Repository checkout",id:"repository-checkout",level:3},{value:"Script arguments",id:"script-arguments",level:3},{value:"Script Variables",id:"script-variables",level:3},{value:"Azure Repos Git Build Repositories",id:"azure-repos-git-build-repositories",level:4},{value:"GitHub Build Repositories",id:"github-build-repositories",level:4},{value:"Setting Values",id:"setting-values",level:4},{value:"Exit Codes",id:"exit-codes",level:3},{value:"Alternatives",id:"alternatives",level:2}];function h(e){let i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"azure-pipelines-integration",children:"Azure Pipelines Integration"})}),"\n",(0,t.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(i.p,{children:["Azure Pipelines ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos",children:"supports several different source repositories"}),". This integration works with repos\nhosted on ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/azure-repos-git",children:"Azure Repos Git"})," and ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/github",children:"GitHub"}),"."]}),"\n",(0,t.jsx)(i.p,{children:"Once configured for a repository, the Azure Pipelines integration will provide analysis of project dependencies from\nmanifests and lockfiles. This can happen in a branch pipeline run from a CI trigger or in a Pull Request (PR)\npipeline run from a PR trigger."}),"\n",(0,t.jsx)(i.p,{children:"For PR triggered pipelines, analyzed dependencies will include any that are added/modified in the PR."}),"\n",(0,t.jsxs)(i.p,{children:["For CI triggered pipelines, the analyzed dependencies will be determined by comparing dependency files in the branch\nto the default branch. ",(0,t.jsx)(i.strong,{children:"All"})," dependencies will be analyzed when the CI triggered pipeline is run on the default\nbranch."]}),"\n",(0,t.jsx)(i.p,{children:"The results will be provided in the pipeline logs and provided as a comment in a thread on the PR unless the option to\nskip comments is provided. The CI job will return an error (i.e., fail the build) if any of the analyzed dependencies\nfail to meet the established policy unless audit mode is specified."}),"\n",(0,t.jsxs)(i.p,{children:["There will be no comment if no dependencies were added or modified for a given PR.\nThere will be no comment when the results of the analysis are successful.\nIf one or more dependencies are still processing (no results available), then the comment will make that clear and\nthe CI pipeline job will only fail if dependencies that have ",(0,t.jsx)(i.em,{children:"completed analysis results"})," do not meet the active policy."]}),"\n",(0,t.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(i.p,{children:"The Azure Pipelines environment is primarily supported through the use of a Docker image.\nThe prerequisites for using this image are:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Access to the ",(0,t.jsxs)(i.a,{href:"https://hub.docker.com/r/phylumio/phylum-ci/tags",children:[(0,t.jsx)(i.code,{children:"phylumio/phylum-ci"})," Docker image"]})]}),"\n",(0,t.jsxs)(i.li,{children:["Azure DevOps Services is used with an ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/azure-repos-git",children:"Azure Repos Git"})," or ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/github",children:"GitHub"})," repository type\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Azure DevOps Server versions are not guaranteed to work at this time"}),"\n",(0,t.jsx)(i.li,{children:"Bitbucket Cloud hosted repositories are not supported at this time"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["An ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/integrate/get-started/authentication/authentication-guidance",children:"Azure token"})," with API access\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["This is only required when:\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The build repository is ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/azure-repos-git",children:"Azure Repos Git"})]}),"\n",(0,t.jsx)(i.li,{children:"PR triggers are enabled"}),"\n",(0,t.jsx)(i.li,{children:"Comment generation has not been skipped"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Can be the default ",(0,t.jsx)(i.code,{children:"System.AccessToken"})," provided automatically at the start of each pipeline build\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/access-tokens#scoped-build-identities",children:"scoped build identity"})," using this token needs the ",(0,t.jsx)(i.code,{children:"Contribute to pull requests"})," permission"]}),"\n",(0,t.jsxs)(i.li,{children:["See documentation for using the ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/build/variables#systemaccesstoken",children:"token"})," and setting it's ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/access-tokens#job-authorization-scope",children:"job authorization scope"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Can be a personal access token (PAT) - see ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate",children:"documentation"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Needs at least the ",(0,t.jsx)(i.code,{children:"Pull Request Threads"})," scope (read & write)"]}),"\n",(0,t.jsx)(i.li,{children:"Consider using a service account for this token"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["A ",(0,t.jsx)(i.a,{href:"https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",children:"GitHub PAT"})," with API access\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["This is only required when:\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The build repository is ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/github",children:"GitHub"})]}),"\n",(0,t.jsx)(i.li,{children:"PR triggers are enabled"}),"\n",(0,t.jsx)(i.li,{children:"Comment generation has not been skipped"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Can be a fine-grained PAT\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Needs repository access and permissions: read access to ",(0,t.jsx)(i.code,{children:"metadata"})," and read/write access to ",(0,t.jsx)(i.code,{children:"pull requests"})]}),"\n",(0,t.jsxs)(i.li,{children:["See ",(0,t.jsx)(i.a,{href:"https://docs.github.com/rest/overview/permissions-required-for-fine-grained-personal-access-tokens",children:"permissions required for fine-grained PATs"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Can be a classic PAT\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Needs the ",(0,t.jsx)(i.code,{children:"repo"})," scope or minimally the ",(0,t.jsx)(i.code,{children:"public_repo"})," scope if private repositories are not used"]}),"\n",(0,t.jsxs)(i.li,{children:["See ",(0,t.jsx)(i.a,{href:"https://docs.github.com/developers/apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes",children:"documentation"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["A ",(0,t.jsx)(i.a,{href:"/knowledge_base/api-keys",children:"Phylum token"})," with API access\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"https://phylum.io/contact-us/",children:"Contact Phylum"})," or ",(0,t.jsx)(i.a,{href:"https://app.phylum.io/register",children:"register"})," to gain access\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["See also ",(0,t.jsx)(i.a,{href:"/cli/commands/phylum_auth_register",children:(0,t.jsx)(i.code,{children:"phylum auth register"})})," command documentation"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.li,{children:"Consider using a bot or group account for this token"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Access to the Phylum API endpoints\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"That usually means a connection to the internet, optionally via a proxy"}),"\n",(0,t.jsx)(i.li,{children:"Support for on-premises installs are not available at this time"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.h2,{id:"configure-azure-pipelinesyml",children:["Configure ",(0,t.jsx)(i.code,{children:"azure-pipelines.yml"})]}),"\n",(0,t.jsx)(i.p,{children:"Phylum analysis of dependencies can be added to existing pipelines or on it's own with this minimal configuration:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"trigger:\n  - main\npr:\n  - main\n\njobs:\n  - job: Phylum\n    pool:\n      vmImage: ubuntu-latest\n    container: phylumio/phylum-ci:latest\n    steps:\n      - checkout: self\n        fetchDepth: 0\n        persistCredentials: true\n      - script: phylum-ci -vv\n        displayName: Analyze dependencies with Phylum\n        env:\n          PHYLUM_API_KEY: $(PHYLUM_TOKEN)\n          AZURE_TOKEN: $(AZURE_PAT)     # For Azure repos only\n          GITHUB_TOKEN: $(GITHUB_PAT)   # For GitHub repos only\n"})}),"\n",(0,t.jsxs)(i.p,{children:["This single stage pipeline configuration contains a single container job named ",(0,t.jsx)(i.code,{children:"Phylum"}),", triggered to run on pushes\nor PRs targeting the ",(0,t.jsx)(i.code,{children:"main"})," branch. It provides debug output but otherwise does not override any of the ",(0,t.jsx)(i.code,{children:"phylum-ci"}),"\narguments, which are all either optional or default to secure values."]}),"\n",(0,t.jsx)(i.p,{children:"Let's take a deeper dive into each part of the configuration:"}),"\n",(0,t.jsx)(i.h3,{id:"pipeline-control",children:"Pipeline control"}),"\n",(0,t.jsxs)(i.p,{children:["Choose when to run the pipeline. See the YAML schema ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/trigger",children:"trigger definition"})," and ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/pr",children:"pr definition"}),"\ndocumentation for more detail. It is recommended to enable CI triggered branch pipelines for pushes to the default\nbranch, to ensure the Phylum analysis results for that branch are current."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"# This is a CI trigger that will cause the\n# pipeline to run on pushes to the `main` branch\ntrigger:\n  - main\n"})}),"\n",(0,t.jsxs)(i.p,{children:["It is recommended to also enable PR validation for the target trigger branch(es). To do so for GitHub repos, use\nthe ",(0,t.jsx)(i.code,{children:"pr"})," keyword. See the YAML schema ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/pr",children:"pr definition"})," documentation for more detail."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"# This is a PR trigger that will cause the pipeline to run when\n# a pull request is opened with `main` as the target branch.\n# NOTE: This has no affect for Azure Repos Git based repositories\npr:\n  - main\n"})}),"\n",(0,t.jsxs)(i.p,{children:["To enable PR validation for Azure Repos Git, navigate to the branch policies for the desired branch\n(",(0,t.jsx)(i.code,{children:"main"})," in this example), and configure the ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/repos/git/branch-policies#build-validation",children:"Build validation policy"})," for that branch.\nFor more information, see the documentation on ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/azure-repos-git#pr-triggers",children:"PR triggers for Azure Repos Git"})," hosted repositories,\n",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/github#pr-triggers",children:"PR triggers for GitHub"}),", or more broadly ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/build/triggers",children:"events that trigger pipelines"}),"."]}),"\n",(0,t.jsx)(i.h3,{id:"job-names",children:"Job names"}),"\n",(0,t.jsx)(i.p,{children:"The job name can be named differently or included in an existing stage/job."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"jobs:\n  - job: Phylum  # Name this what you like\n"})}),"\n",(0,t.jsx)(i.h3,{id:"pool-selection",children:"Pool selection"}),"\n",(0,t.jsxs)(i.p,{children:["The pool is specified at the job level here because this is a ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/container-phases",children:"container job"}),". While Azure Pipelines\nallows container jobs for ",(0,t.jsx)(i.code,{children:"windows-2019"})," and ",(0,t.jsx)(i.code,{children:"ubuntu-*"})," base ",(0,t.jsx)(i.code,{children:"vmImage"})," images, only ",(0,t.jsx)(i.code,{children:"ubuntu-*"})," is supported by\nPhylum at this time. Keeping that restriction in mind, the pool can be specified at the pipeline or stage level\ninstead. See the ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/pool",children:"YAML schema pool definition"})," documentation for more detail."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"    pool:\n      vmImage: ubuntu-latest\n"})}),"\n",(0,t.jsx)(i.h3,{id:"docker-image-selection",children:"Docker image selection"}),"\n",(0,t.jsxs)(i.p,{children:["The container is specified at the job level here because this is a ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/container-phases",children:"container job"})," where all steps\nin the job are meant to run with the same image. The container can also be specified as a\n",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/resources-containers-container",children:"resource at the pipeline level"})," and then\n",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/tasks#step-target",children:"referenced by name in individual steps of a job"})," instead.\nSee the YAML schema ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/jobs-job-container",children:"jobs.job.container definition"})," and ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/resources",children:"resource definition"}),"\ndocumentation for more detail."]}),"\n",(0,t.jsxs)(i.p,{children:["Choose the Docker image tag to match your comfort level with image dependencies. ",(0,t.jsx)(i.code,{children:"latest"}),' is a "rolling" tag that\nwill point to the image created for the latest released ',(0,t.jsx)(i.code,{children:"phylum-ci"})," Python package. A particular version tag\n(e.g., ",(0,t.jsx)(i.code,{children:"0.42.4-CLIv6.1.2"}),") is created for each release of the ",(0,t.jsx)(i.code,{children:"phylum-ci"})," Python package and ",(0,t.jsx)(i.em,{children:"should"})," not change\nonce published."]}),"\n",(0,t.jsxs)(i.p,{children:["However, to be certain that the image does not change...or be warned when it does because it won't be available\nanymore...use the SHA256 digest of the tag. The digest can be found by looking at the ",(0,t.jsx)(i.code,{children:"phylumio/phylum-ci"}),"\n",(0,t.jsx)(i.a,{href:"https://hub.docker.com/r/phylumio/phylum-ci/tags",children:"tags on Docker Hub"})," or with the command:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-sh",children:'# The command-line JSON processor `jq` is used here for the sake of a one line example. It is not required.\n\u276F docker manifest inspect --verbose phylumio/phylum-ci:0.42.4-CLIv6.1.2 | jq .Descriptor.digest\n"sha256:77b761ccef10edc28b0f009a40fbeab240bf004522edaaea05572dc3728b6ca6"\n'})}),"\n",(0,t.jsx)(i.p,{children:"For instance, at the time of this writing, all of these tag references pointed to the same image:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"    # NOTE: These are examples. Only one container line for `phylum-ci` is expected.\n\n    # Be explicit about wanting the `latest` tag\n    container: phylumio/phylum-ci:latest\n\n    # Use a specific release version of the `phylum-ci` package\n    container: phylumio/phylum-ci:0.42.4-CLIv6.1.2\n\n    # Use a specific image with it's SHA256 digest\n    container: phylumio/phylum-ci@sha256:77b761ccef10edc28b0f009a40fbeab240bf004522edaaea05572dc3728b6ca6\n"})}),"\n",(0,t.jsx)(i.p,{children:"Only the last tag reference, by SHA256 digest, is guaranteed to not have the underlying image it points to change."}),"\n",(0,t.jsxs)(i.p,{children:["The default ",(0,t.jsx)(i.code,{children:"phylum-ci"})," Docker image contains ",(0,t.jsx)(i.code,{children:"git"})," and the installed ",(0,t.jsx)(i.code,{children:"phylum"})," Python package. It also contains an\ninstalled version of the Phylum CLI and all required tools needed for ",(0,t.jsx)(i.a,{href:"/cli/lockfile_generation",children:"lockfile generation"}),".\nAn advantage of using the default Docker image is that the complete environment is packaged and made available\nwith components that are known to work together."]}),"\n",(0,t.jsxs)(i.p,{children:["One disadvantage to the default image is it's size. It can take a while to download and may provide more\ntools than required for your specific use case. Special ",(0,t.jsx)(i.code,{children:"slim"})," tags of the ",(0,t.jsx)(i.code,{children:"phylum-ci"})," image are provided as\nan alternative. These tags differ from the default image in that they do not contain the required tools needed\nfor ",(0,t.jsx)(i.a,{href:"/cli/lockfile_generation",children:"lockfile generation"})," (with the exception of the ",(0,t.jsx)(i.code,{children:"pip"})," tool). The ",(0,t.jsx)(i.code,{children:"slim"})," tags are\nsignificantly smaller and allow for faster action run times. They are useful for those instances where ",(0,t.jsx)(i.strong,{children:"no"}),"\nmanifest files are present and/or ",(0,t.jsx)(i.strong,{children:"only"})," lockfiles are used."]}),"\n",(0,t.jsx)(i.p,{children:"Here are examples of using the slim image tags:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"    # NOTE: These are examples. Only one container line for `phylum-ci` is expected.\n\n    # Use the most current release of *both* `phylum-ci` and the Phylum CLI\n    container: phylumio/phylum-ci:slim\n\n    # Use the `slim` image with a specific release version of `phylum-ci` and Phylum CLI\n    container: phylumio/phylum-ci:0.42.4-CLIv6.1.2-slim\n"})}),"\n",(0,t.jsx)(i.h3,{id:"repository-checkout",children:"Repository checkout"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"phylum-ci"})," logic for determining changes in dependency files requires git history beyond what is available in a\nshallow clone/checkout/fetch. To ensure the shallow fetch option is disabled for the pipeline, an explicit checkout\nstep is specified here, with ",(0,t.jsx)(i.code,{children:"fetchDepth"})," set to ",(0,t.jsx)(i.code,{children:"0"}),". It is also possible to disable the shallow fetch option in the\n",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/azure-repos-git#shallow-fetch",children:"pipeline settings UI"}),". See the ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/steps-checkout",children:"YAML schema steps.checkout definition"})," documentation\nfor more detail."]}),"\n",(0,t.jsxs)(i.p,{children:["In order to support CI triggers, certain git operations are needed to determine the default branch name and set the\nremote HEAD ref for it since Azure Pipelines does not do so during repository checkout. These operations require git\ncredentials to be available after the initial fetch, which is done with the ",(0,t.jsx)(i.code,{children:"persistCredentials"})," property. This property\nis not required if CI triggers are disabled (e.g., via ",(0,t.jsx)(i.code,{children:"trigger: none"}),")."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"      # Reference: https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/steps-checkout\n      - checkout: self\n        fetchDepth: 0\n        persistCredentials: true    # Needed only for CI triggers\n"})}),"\n",(0,t.jsx)(i.h3,{id:"script-arguments",children:"Script arguments"}),"\n",(0,t.jsxs)(i.p,{children:["The arguments to the script step are the way to exert control over the execution of the Phylum analysis.\nThe entry here will run as a script in the ",(0,t.jsx)(i.code,{children:"phylum-ci"})," based container job.\nSee the ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/steps-script",children:"YAML schema steps.script definition"})," and ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/container-phases",children:"container job"})," documentation for\nmore detail."]}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"phylum-ci"})," script entry point is expected to be called. It has a number of arguments that are all optional\nand defaulted to secure values. To view the arguments, their description, and default values,\nrun the script with ",(0,t.jsx)(i.code,{children:"--help"})," output as specified in the ",(0,t.jsx)(i.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md#usage",children:"Usage section of the top-level README.md"})," or\nview the ",(0,t.jsx)(i.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/docs/script_options.md",children:"script options output"})," for the latest release."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:'      # NOTE: These are examples. Only one script entry line for `phylum-ci` is expected.\n\n      # Use the defaults for all the arguments.\n      # The default behavior is to only analyze newly added dependencies\n      # against the active policy set at the Phylum project level.\n      - script: phylum-ci\n\n      # Provide debug level output. Highly recommended.\n      - script: phylum-ci -vv\n\n      # Consider all dependencies in analysis results instead of just the newly added ones.\n      # The default is to only analyze newly added dependencies, which can be useful for\n      # existing code bases that may not meet established policy rules yet,\n      # but don\'t want to make things worse. Specifying `--all-deps` can be useful for\n      # casting the widest net for strict adherence to Quality Assurance (QA) standards.\n      - script: phylum-ci --all-deps\n\n      # Some lockfile types (e.g., Python/pip `requirements.txt`) are ambiguous in\n      # that they can be named differently and may or may not contain strict\n      # dependencies. In these cases it is best to specify an explicit path, either\n      # with the `--depfile` option or in a `.phylum_project` file. For more, see:\n      # https://docs.phylum.io/knowledge_base/phylum_project_files\n      - script: phylum-ci --depfile requirements-prod.txt\n\n      # Specify multiple explicit dependency file paths.\n      - script: phylum-ci --depfile requirements-prod.txt Cargo.toml path/to/dependency.file\n\n      # Exclude dependency files by gitignore-style pattern.\n      - script: phylum-ci --exclude "requirements-*.txt"\n\n      # Specify multiple exclusion patterns.\n      - script: phylum-ci --exclude "build.gradle" "tests/fixtures/"\n      - script: |\n        phylum-ci \\\n          --exclude "/requirements-*.txt" \\\n          --exclude "build.gradle" "fixtures/"\n\n      # Force analysis for all dependencies in a manifest file. This is especially useful\n      # for *workspace* manifest files where there is no companion lockfile (e.g., libraries).\n      - script: phylum-ci --force-analysis --all-deps --depfile Cargo.toml\n\n      # Perform analysis as part of an organization and/or group-owned project.\n      # When an org is specified, a group name must also be specified.\n      # A paid account is needed to use orgs or groups: https://phylum.io/pricing\n      - script: phylum-ci --org my_org --group my_group\n      - script: phylum-ci --group my_group\n\n      # Analyze all dependencies in audit mode, to gain insight without failing builds.\n      - script: phylum-ci --all-deps --audit\n\n      # Ensure the latest Phylum CLI is installed.\n      - script: phylum-ci --force-install\n\n      # Install a specific version of the Phylum CLI.\n      - script: phylum-ci --phylum-release 4.8.0 --force-install\n\n      # Mix and match for your specific use case.\n      - script: |\n        phylum-ci \\\n          -vv \\\n          --org my_org \\\n          --group my_group \\\n          --depfile requirements-dev.txt \\\n          --depfile requirements-prod.txt path/to/dependency.file \\\n          --depfile Cargo.toml \\\n          --force-analysis \\\n          --all-deps\n'})}),"\n",(0,t.jsx)(i.h3,{id:"script-variables",children:"Script Variables"}),"\n",(0,t.jsxs)(i.p,{children:["The script step environment variables are used to ensure the ",(0,t.jsx)(i.code,{children:"phylum-ci"})," tool is able to perform it's job."]}),"\n",(0,t.jsxs)(i.p,{children:["A ",(0,t.jsx)(i.a,{href:"/knowledge_base/api-keys",children:"Phylum token"})," with API access is required to perform analysis on project dependencies.\n",(0,t.jsx)(i.a,{href:"https://phylum.io/contact-us/",children:"Contact Phylum"})," or ",(0,t.jsx)(i.a,{href:"https://app.phylum.io/register",children:"register"})," to gain access.\nSee also ",(0,t.jsx)(i.a,{href:"/cli/commands/phylum_auth_register",children:(0,t.jsx)(i.code,{children:"phylum auth register"})})," command documentation and consider using a bot or group account\nfor this token."]}),"\n",(0,t.jsx)(i.h4,{id:"azure-repos-git-build-repositories",children:"Azure Repos Git Build Repositories"}),"\n",(0,t.jsxs)(i.p,{children:["An Azure DevOps token with API access is required to use the API (e.g., to post notes/comments) when the build\nrepository is ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/azure-repos-git",children:"Azure Repos Git"}),", PR triggers are enabled, and comment generation is not skipped.\nThis can be the default ",(0,t.jsx)(i.code,{children:"System.AccessToken"})," provided automatically at the start of each pipeline build for the\n",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/access-tokens#scoped-build-identities",children:"scoped build identity"})," or a personal access token (PAT)."]}),"\n",(0,t.jsxs)(i.p,{children:["If using a PAT, it will need at least the ",(0,t.jsx)(i.code,{children:"Pull Request Threads"})," scope (read & write).\nThe account used to create the PAT will be the one that appears to post the comments on the pull request.\nTherefore, it might be worth using a bot or service account.\nSee the Azure DevOps ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate",children:"documentation for using PATs to authenticate"})," for more info."]}),"\n",(0,t.jsxs)(i.p,{children:["If using the ",(0,t.jsx)(i.code,{children:"System.AccessToken"}),", the ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/access-tokens#scoped-build-identities",children:"scoped build identity"})," it attaches to needs at least the\n",(0,t.jsx)(i.code,{children:"Contribute to pull requests"})," permission. For example, to use the ",(0,t.jsx)(i.code,{children:"System.AccessToken"})," on a project-scoped\nidentity, follow these steps:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Go to project settings"}),"\n",(0,t.jsxs)(i.li,{children:["Select the ",(0,t.jsx)(i.code,{children:"Repos --\x3e Repositories"})," menu"]}),"\n",(0,t.jsxs)(i.li,{children:["Select the ",(0,t.jsx)(i.code,{children:"Security"})," tab"]}),"\n",(0,t.jsxs)(i.li,{children:["Select the user ",(0,t.jsx)(i.code,{children:"{Project Name} Build Service ({Org Name})"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"NOTE: This user will only exist after the first time the pipeline has run"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Ensure the ",(0,t.jsx)(i.code,{children:"Contribute to pull requests"})," permission is set to ",(0,t.jsx)(i.code,{children:"Allow"})]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["See the Azure DevOps documentation for ",(0,t.jsxs)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/build/variables#systemaccesstoken",children:["using the ",(0,t.jsx)(i.code,{children:"System.AccessToken"})]})," and setting it's\n",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/access-tokens#job-authorization-scope",children:"job authorization scope"}),"."]}),"\n",(0,t.jsx)(i.h4,{id:"github-build-repositories",children:"GitHub Build Repositories"}),"\n",(0,t.jsxs)(i.p,{children:["A ",(0,t.jsx)(i.a,{href:"https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",children:"GitHub PAT"})," with API access is required to use the API (e.g., to post notes/comments) when the build\nrepository is ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/repos/github",children:"GitHub"}),", PR triggers are enabled, and comment generation is not skipped.\nThis can be a fine-grained or classic PAT."]}),"\n",(0,t.jsxs)(i.p,{children:["If using a fine-grained PAT, it will need repository access and permissions for read access to ",(0,t.jsx)(i.code,{children:"metadata"})," and\nread/write access to ",(0,t.jsx)(i.code,{children:"pull requests"}),". See ",(0,t.jsx)(i.a,{href:"https://docs.github.com/rest/overview/permissions-required-for-fine-grained-personal-access-tokens",children:"permissions required for fine-grained PATs"})," for more info."]}),"\n",(0,t.jsxs)(i.p,{children:["If using a classic PAT, it will need the ",(0,t.jsx)(i.code,{children:"repo"})," scope or minimally the ",(0,t.jsx)(i.code,{children:"public_repo"})," scope if private\nrepositories are not used. See ",(0,t.jsx)(i.a,{href:"https://docs.github.com/developers/apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes",children:"documentation for scopes"})," for more info."]}),"\n",(0,t.jsx)(i.h4,{id:"setting-values",children:"Setting Values"}),"\n",(0,t.jsxs)(i.p,{children:["Values for the ",(0,t.jsx)(i.code,{children:"PHYLUM_API_KEY"})," and either ",(0,t.jsx)(i.code,{children:"AZURE_TOKEN"})," or ",(0,t.jsx)(i.code,{children:"GITHUB_TOKEN"})," environment variable (e.g., ",(0,t.jsx)(i.code,{children:"PHYLUM_TOKEN"}),"\nand one of either ",(0,t.jsx)(i.code,{children:"AZURE_PAT"})," or ",(0,t.jsx)(i.code,{children:"GITHUB_PAT"})," in the example here) can come from the pipeline UI, a variable group,\nor an Azure Key Vault. View the full ",(0,t.jsx)(i.a,{href:"https://learn.microsoft.com/azure/devops/pipelines/process/set-secret-variables",children:"documentation for how to set secret variables"})," for more\ninformation. Since these tokens are sensitive, ",(0,t.jsx)(i.strong,{children:"care should be taken to protect them appropriately"}),"."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",children:"        env:\n          # Contact Phylum (phylum.io/contact-us) or register (app.phylum.io/register)\n          # to gain access. Consider using a bot or group account for this token. See:\n          # https://docs.phylum.io/knowledge_base/api-keys\n          # This value (`PHYLUM_TOKEN`) will need to be set as a secret variable:\n          # https://learn.microsoft.com/azure/devops/pipelines/process/set-secret-variables\n          PHYLUM_API_KEY: $(PHYLUM_TOKEN)\n\n          # NOTE: These are examples. Only one `AZURE_TOKEN` entry line is expected, and only\n          #       when the build repository is hosted in Azure Repos Git with PR triggers\n          #       and comment generation enabled.\n          #\n          # Use the `System.AccessToken` provided automatically at the start of each pipeline build.\n          # This value does not have to be set as a secret variable since it is provided by default.\n          AZURE_TOKEN: $(System.AccessToken)\n          #\n          # Use a personal access token (PAT).\n          # This value (`AZURE_PAT`) will need to be set as a secret variable:\n          # https://learn.microsoft.com/azure/devops/pipelines/process/set-secret-variables\n          AZURE_TOKEN: $(AZURE_PAT)\n\n          # NOTE: A `GITHUB_TOKEN` entry is only needed for GitHub hosted build repositories\n          #       with PR triggers and comment generation enabled.\n          #\n          # Use a personal access token (PAT).\n          # This value (`GITHUB_PAT`) will need to be set as a secret variable:\n          # https://learn.microsoft.com/azure/devops/pipelines/process/set-secret-variables\n          GITHUB_TOKEN: $(GITHUB_PAT)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"exit-codes",children:"Exit Codes"}),"\n",(0,t.jsxs)(i.p,{children:["The Phylum analysis job will return a zero (0) exit code when it completes successfully and a non-zero code otherwise.\nThe full and current list of exit codes is ",(0,t.jsx)(i.a,{href:"https://github.com/phylum-dev/phylum-ci#exit-codes",children:"documented here"}),' and "Output Modification"\n',(0,t.jsx)(i.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/docs/script_options.md",children:"options exist"})," to be strict or loose with setting them."]}),"\n",(0,t.jsx)(i.h2,{id:"alternatives",children:"Alternatives"}),"\n",(0,t.jsxs)(i.p,{children:["It is also possible to make direct use of the ",(0,t.jsxs)(i.a,{href:"https://pypi.org/project/phylum/",children:[(0,t.jsx)(i.code,{children:"phylum"})," Python package"]})," within CI.\nThis may be necessary if the Docker image is unavailable or undesirable for some reason.\nTo use the ",(0,t.jsx)(i.code,{children:"phylum"})," package, install it and call the desired entry points from a script under your control.\nSee the ",(0,t.jsx)(i.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md#installation",children:"Installation"})," and ",(0,t.jsx)(i.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md#usage",children:"Usage"})," sections of the ",(0,t.jsx)(i.a,{href:"https://github.com/phylum-dev/phylum-ci/blob/main/README.md",children:"README file"})," for more detail."]})]})}function d(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},65:function(e,i,n){n.d(i,{Z:()=>a,a:()=>o});var s=n(7294);let t={},r=s.createContext(t);function o(e){let i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);