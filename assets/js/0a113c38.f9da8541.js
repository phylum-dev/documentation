"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["5265"],{516:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>c,default:()=>h,contentTitle:()=>o,assets:()=>r,toc:()=>d,metadata:()=>i});var i=JSON.parse('{"id":"cli/commands/phylum_extension_install","title":"phylum extension install","description":"Install extension","source":"@site/../docs/cli/commands/phylum_extension_install.md","sourceDirName":"cli/commands","slug":"/cli/commands/phylum_extension_install","permalink":"/cli/commands/phylum_extension_install","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/cli/edit/main/docs/commands/phylum_extension_install.md","tags":[],"version":"current","lastUpdatedBy":"Christian D\xfcrr","lastUpdatedAt":1724960591000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"phylum extension","permalink":"/cli/commands/phylum_extension"},"next":{"title":"phylum extension list","permalink":"/cli/commands/phylum_extension_list"}}'),t=s(5893),l=s(65);let c={},o="phylum extension install",r={},d=[{value:"Arguments",id:"arguments",level:2},{value:"Options",id:"options",level:2},{value:"Details",id:"details",level:2}];function a(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"phylum-extension-install",children:"phylum extension install"})}),"\n",(0,t.jsx)(n.p,{children:"Install extension"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"Usage: phylum extension install [OPTIONS] <PATH>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"<PATH>"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-y"}),", ",(0,t.jsx)(n.code,{children:"--yes"}),"\n\u2003 Accept permissions and overwrite existing extensions (same as `--overwrite --accept-permissions`)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--accept-permissions"}),"\n\u2003 Automatically accept requested permissions"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--overwrite"}),"\n\u2003 Overwrite existing extension"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-o"}),", ",(0,t.jsx)(n.code,{children:"--org"})," ",(0,t.jsx)(n.code,{children:"<ORG>"}),"\n\u2003 Phylum organization"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-v"}),", ",(0,t.jsx)(n.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-q"}),", ",(0,t.jsx)(n.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-h"}),", ",(0,t.jsx)(n.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,t.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,t.jsxs)(n.p,{children:["The extension will be installed under ",(0,t.jsx)(n.code,{children:"$XDG_DATA_HOME/phylum/extensions/<EXT_NAME>"}),".\nIf ",(0,t.jsx)(n.code,{children:"$XDG_DATA_HOME"})," is not set, it will default to ",(0,t.jsx)(n.code,{children:"$HOME/.local/share/phylum/extensions/<EXT_NAME>"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Once installed, the extension will be accessible via the Phylum CLI:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"phylum <EXT_NAME> [OPTIONS]...\n"})})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},65:function(e,n,s){s.d(n,{Z:()=>o,a:()=>c});var i=s(7294);let t={},l=i.createContext(t);function c(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);