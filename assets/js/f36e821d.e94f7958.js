"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["1095"],{9539:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>l,toc:()=>t,default:()=>p,metadata:()=>c,assets:()=>s,contentTitle:()=>o});var c=JSON.parse('{"id":"cli/commands/phylum_init","title":"phylum init","description":"Setup a new Phylum project","source":"@site/../docs/cli/commands/phylum_init.md","sourceDirName":"cli/commands","slug":"/cli/commands/phylum_init","permalink":"/cli/commands/phylum_init","draft":false,"unlisted":false,"editUrl":"https://github.com/phylum-dev/cli/edit/main/docs/commands/phylum_init.md","tags":[],"version":"current","lastUpdatedBy":"Christian D\xfcrr","lastUpdatedAt":1733348290000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"phylum history","permalink":"/cli/commands/phylum_history"},"next":{"title":"phylum org","permalink":"/cli/commands/phylum_org"}}'),d=i(5893),r=i(65);let l={},o="phylum init",s={},t=[{value:"Arguments",id:"arguments",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2}];function h(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"phylum-init",children:"phylum init"})}),"\n",(0,d.jsx)(n.p,{children:"Setup a new Phylum project"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"Usage: phylum init [OPTIONS] [PROJECT_NAME]\n"})}),"\n",(0,d.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"[PROJECT_NAME]"}),"\n\u2003 Phylum project name"]}),"\n",(0,d.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-g"}),", ",(0,d.jsx)(n.code,{children:"--group"})," ",(0,d.jsx)(n.code,{children:"<GROUP_NAME>"}),"\n\u2003 Group which will be the owner of the project"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-d"}),", ",(0,d.jsx)(n.code,{children:"--dependency-file"})," ",(0,d.jsx)(n.code,{children:"<DEPENDENCY_FILE>"}),"\n\u2003 Project-relative dependency file path"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-t"}),", ",(0,d.jsx)(n.code,{children:"--type"})," ",(0,d.jsx)(n.code,{children:"<TYPE>"}),"\n\u2003 Dependency file type used for all lockfiles (default: auto)\n\u2003 Accepted values: ",(0,d.jsx)(n.code,{children:"npm"}),", ",(0,d.jsx)(n.code,{children:"yarn"}),", ",(0,d.jsx)(n.code,{children:"pnpm"}),", ",(0,d.jsx)(n.code,{children:"gem"}),", ",(0,d.jsx)(n.code,{children:"pip"}),", ",(0,d.jsx)(n.code,{children:"poetry"}),", ",(0,d.jsx)(n.code,{children:"pipenv"}),", ",(0,d.jsx)(n.code,{children:"mvn"}),", ",(0,d.jsx)(n.code,{children:"gradle"}),", ",(0,d.jsx)(n.code,{children:"msbuild"}),", ",(0,d.jsx)(n.code,{children:"nugetlock"}),", ",(0,d.jsx)(n.code,{children:"nugetconfig"}),", ",(0,d.jsx)(n.code,{children:"gomod"}),", ",(0,d.jsx)(n.code,{children:"go"}),", ",(0,d.jsx)(n.code,{children:"cargo"}),", ",(0,d.jsx)(n.code,{children:"spdx"}),", ",(0,d.jsx)(n.code,{children:"cyclonedx"}),", ",(0,d.jsx)(n.code,{children:"auto"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-f"}),", ",(0,d.jsx)(n.code,{children:"--force"}),"\n\u2003 Overwrite existing configurations without confirmation"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-r"}),", ",(0,d.jsx)(n.code,{children:"--repository-url"})," ",(0,d.jsx)(n.code,{children:"<REPOSITORY_URL>"}),"\n\u2003 Repository URL of the project"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-o"}),", ",(0,d.jsx)(n.code,{children:"--org"})," ",(0,d.jsx)(n.code,{children:"<ORG>"}),"\n\u2003 Phylum organization"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-v"}),", ",(0,d.jsx)(n.code,{children:"--verbose"}),"...\n\u2003 Increase the level of verbosity (the maximum is -vvv)"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-q"}),", ",(0,d.jsx)(n.code,{children:"--quiet"}),"...\n\u2003 Reduce the level of verbosity (the maximum is -qq)"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"-h"}),", ",(0,d.jsx)(n.code,{children:"--help"}),"\n\u2003 Print help"]}),"\n",(0,d.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"# Interactively initialize the Phylum project.\n$ phylum init\n\n# Create the `demo` project with a yarn lockfile and no associated group.\n$ phylum init --dependency-file yarn.lock --type yarn demo\n\n# Create the `demo` project in the `sample` group of the `test` organization.\n$ phylum init --org test --group sample demo\n"})})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},65:function(e,n,i){i.d(n,{Z:()=>o,a:()=>l});var c=i(7294);let d={},r=c.createContext(d);function l(e){let n=c.useContext(r);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),c.createElement(r.Provider,{value:n},e.children)}}}]);